<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Spring Boot Mail发送邮件</title>
      <link href="/2020/08/11/spring-boot-mail-fa-song-you-jian/"/>
      <url>/2020/08/11/spring-boot-mail-fa-song-you-jian/</url>
      
        <content type="html"><![CDATA[<h1 id="邮件协议"><a href="#邮件协议" class="headerlink" title="邮件协议"></a>邮件协议</h1><blockquote><p>示例引用于网易邮箱，不同邮箱<code>服务器地址</code>不同</p></blockquote><p><img src="http://imgcq.test.upcdn.net/20200713173053.png?!"></p><blockquote><p>IMAP和POP3区别</p></blockquote><p><img src="http://imgcq.test.upcdn.net/20200713173655.png?!"></p><h2 id="POP3-接收邮件服务器"><a href="#POP3-接收邮件服务器" class="headerlink" title="POP3 接收邮件服务器"></a>POP3 接收邮件服务器</h2><blockquote><p> <strong>POP3</strong>是Post Office Protocol 3的简称，即邮局协议的第3个版本,它规定怎样将个人计算机连接到Internet的邮件服务器和下载电子邮件的电子协议。它是因特网电子邮件的第一个离线协议标准,POP3允许用户从服务器上把邮件存储到本地主机（即自己的计算机）上,同时删除保存在邮件服务器上的邮件，而POP3服务器则是遵循POP3协议的接收邮件服务器，用来接收电子邮件的。</p></blockquote><h2 id="IMAP-接收邮件服务器"><a href="#IMAP-接收邮件服务器" class="headerlink" title="IMAP 接收邮件服务器"></a>IMAP 接收邮件服务器</h2><blockquote><p> <strong>IMAP</strong>全称是Internet Mail Access Protocol，即交互式邮件存取协议，它是跟POP3类似邮件访问标准协议之一。不同的是，开启了IMAP后，您在电子邮件客户端收取的邮件仍然保留在服务器上，同时在客户端上的操作都会反馈到服务器上，如：删除邮件，标记已读等，服务器上的邮件也会做相应的动作。所以无论从浏览器登录邮箱或者客户端软件登录邮箱，看到的邮件以及状态都是一致的。</p></blockquote><h2 id="SMTP-发送邮件服务器"><a href="#SMTP-发送邮件服务器" class="headerlink" title="SMTP 发送邮件服务器"></a>SMTP 发送邮件服务器</h2><blockquote><p><strong>SMTP</strong> 的全称是“Simple Mail Transfer Protocol”，即简单邮件传输协议。它是一组用于从源地址到目的地址传输邮件的规范，通过它来控制邮件的中转方式。SMTP 协议属于 TCP/IP 协议簇，它帮助每台计算机在发送或中转信件时找到下一个目的地。SMTP 服务器就是遵循 SMTP 协议的发送邮件服务器。SMTP 认证，简单地说就是要求必须在提供了账户名和密码之后才可以登录 SMTP 服务器，这就使得那些垃圾邮件的散播者无可乘之机。增加 SMTP 认证的目的是为了使用户避免受到垃圾邮件的侵扰。　　</p></blockquote><h1 id="项目依赖"><a href="#项目依赖" class="headerlink" title="项目依赖"></a>项目依赖</h1><pre><code>&lt;dependency&gt;    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;    &lt;artifactId&gt;spring-boot-starter-mail&lt;/artifactId&gt;&lt;/dependency&gt;</code></pre><h1 id="项目配置"><a href="#项目配置" class="headerlink" title="项目配置"></a>项目配置</h1><p>aplication.yml</p><p><strong>启用ssl</strong></p><pre><code>server:  port: 9010spring:  mail:#    发送邮件服务器地址    host: smtp.xxx.com#    用户名    username: xxx@xxx.com#    密码，对于QQ邮箱、163邮箱等填写授权码    password: 123456#    ssl 加密端口，无ssl加密为25端口    port: 465#    采用协议    protocol: smtp#    ssl配置参数    properties:      mail:        smtp:          ssl:            enable: true            socketFactory:              fallback: false              class: javax.net.ssl.SSLSocketFactory          auth: true          starttls:            enable: true            required: true# freemarker模板配置  freemarker:#    指定文件后缀    suffix: .html</code></pre><p><strong>不启用ssl</strong></p><pre><code>server:  port: 9010spring:  mail:#    发送邮件服务器地址    host: smtp.xxx.com#    用户名    username: xxx@xxx.com#    密码，对于QQ邮箱、163邮箱等填写授权码    password: 123456#    ssl 加密端口，无ssl加密为25端口    port: 25#    采用协议    protocol: smtp# freemarker模板配置  freemarker:#    指定文件后缀    suffix: .html</code></pre><h1 id="发送邮件"><a href="#发送邮件" class="headerlink" title="发送邮件"></a>发送邮件</h1><h2 id="简易邮件"><a href="#简易邮件" class="headerlink" title="简易邮件"></a>简易邮件</h2><pre><code>    @Autowired    private JavaMailSender javaMailSender;    public void sendSimpleMail() &amp;#123;//        创建消息体        SimpleMailMessage simpleMailMessage = new SimpleMailMessage();        simpleMailMessage.setFrom(&quot;xxxxx@xxx.com&quot;);//发件人        simpleMailMessage.setTo(&quot;1111@qq.com&quot;);//收件人        simpleMailMessage.setSubject(&quot;测试邮件&quot;);//主题        simpleMailMessage.setCc(&quot;156@163.com&quot;);//抄送，可添多个        simpleMailMessage.setText(&quot;邮件内容&quot;);//邮件内容(只能文本)//        simpleMailMessage.setBcc();//密送        javaMailSender.send(simpleMailMessage);        log.info(&quot;发送成功&quot;);    &amp;#125;</code></pre><h2 id="附件邮件"><a href="#附件邮件" class="headerlink" title="附件邮件"></a>附件邮件</h2><pre><code>    @Autowired    private JavaMailSender javaMailSender; public void sendAttachmentMail() throws MessagingException &amp;#123;//        创建消息体        MimeMessage mimeMessage = javaMailSender.createMimeMessage();        MimeMessageHelper helper = new MimeMessageHelper(mimeMessage, true);        helper.setFrom(&quot;xxxxx@xxx.com&quot;);//发件人        helper.setTo(&quot;1111@qq.com&quot;);//收件人        helper.setSubject(&quot;测试邮件&quot;);//主题        helper.setCc(&quot;156@163.com&quot;);//抄送，可添多个        helper.setText(&quot;&lt;html&gt;&lt;body&gt;&lt;b&gt;邮件内容&lt;/b&gt;&lt;/body&gt;&lt;/html&gt;&quot;, true);//邮件内容(文本或者html)        File file = new File(&quot;C:\\home\\logs\\log.2019-08-01.log&quot;);//        添加附件        helper.addAttachment(&quot;测试附加&quot;, file);        javaMailSender.send(mimeMessage);    &amp;#125;</code></pre><h2 id="模板邮件"><a href="#模板邮件" class="headerlink" title="模板邮件"></a>模板邮件</h2><p>添加freemarker依赖,也可以采用其他模板语言velocity、themeleaf等，用法类似</p><pre><code> &lt;dependency&gt;    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;    &lt;artifactId&gt;spring-boot-starter-freemarker&lt;/artifactId&gt;&lt;/dependency&gt;</code></pre><p>创建freemarker模板,新建vm.html模板文件</p><pre><code>&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;title&gt;邮件模板&lt;/title&gt;&lt;/head&gt;&lt;body&gt;$&amp;#123;username&amp;#125;您好:    欢迎使用xxx系统&lt;/body&gt;&lt;/html&gt;</code></pre><p>发送邮件</p><pre><code>    Autowired    private JavaMailSender javaMailSender; public void sendTemplateMail() &amp;#123;//        创建消息体        MimeMessage mimeMessage = javaMailSender.createMimeMessage();        MimeMessageHelper helper = new MimeMessageHelper(mimeMessage, true);        helper.setFrom(&quot;xxxxx@xxx.com&quot;);//发件人        helper.setTo(&quot;1111@qq.com&quot;);//收件人        helper.setSubject(&quot;测试邮件&quot;);//主题        helper.setCc(&quot;156@163.com&quot;);//抄送，可添多个        Map&lt;String, Object&gt; model = new HashMap&lt;&gt;();        model.put(&quot;username&quot;, &quot;Joe&quot;);//        获取模板文件        Template template = freeMarkerConfigurer.getConfiguration().getTemplate(&quot;vm.html&quot;);//        根据模型转换模板内容        String text = FreeMarkerTemplateUtils.processTemplateIntoString(template, model);        helper.setText(text, true);//邮件内容        javaMailSender.send(mimeMessage);    &amp;#125;</code></pre>]]></content>
      
      
      <categories>
          
          <category> Spring Boot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring Boot </tag>
            
            <tag> Mail </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>elasticsearch安装</title>
      <link href="/2020/08/11/elasticsearch-an-zhuang/"/>
      <url>/2020/08/11/elasticsearch-an-zhuang/</url>
      
        <content type="html"><![CDATA[<h2 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h2><ul><li>redhat</li><li>java 8</li></ul><h2 id="安装elasticsearch"><a href="#安装elasticsearch" class="headerlink" title="安装elasticsearch"></a>安装elasticsearch</h2><p><em>es安装默认不支持使用root用户安装，否则会提示java.lang.RuntimeException: can not run elasticsearch as root</em></p><h3 id="新建用户组"><a href="#新建用户组" class="headerlink" title="新建用户组"></a>新建用户组</h3><pre><code>groupadd esuseradd es -g espasswd eses2020chown -R es:es  elasticsearch-7.6.1 su - es</code></pre><p>从官网下载<a href="https://www.elastic.co/cn/downloads/elasticsearch">elasticsearch</a>，然后执行以下命令。</p><pre><code>wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.6.2-linux-x86_64.tar.gz//解压tar-xzvf elasticsearch-7.6.2-linux-x86_64.tar.gz//进入解压目录./bin/elasticsearch</code></pre><p>执行成功后，es会使用9200端口运行</p><pre><code>curl localhost:9200//返回一个 JSON 对象，包含当前节点、集群、版本等信息。&amp;#123;  &quot;name&quot; : &quot;node74&quot;,  &quot;cluster_name&quot; : &quot;elasticsearch&quot;,  &quot;cluster_uuid&quot; : &quot;OUU4f0tiQnazkiQOlExfFw&quot;,  &quot;version&quot; : &amp;#123;    &quot;number&quot; : &quot;7.6.1&quot;,    &quot;build_flavor&quot; : &quot;default&quot;,    &quot;build_type&quot; : &quot;tar&quot;,    &quot;build_hash&quot; : &quot;aa751e09be0a5072e8570670309b1f12348f023b&quot;,    &quot;build_date&quot; : &quot;2020-03-01T00:15:25.529771Z&quot;,    &quot;build_snapshot&quot; : false,    &quot;lucene_version&quot; : &quot;8.4.0&quot;,    &quot;minimum_wire_compatibility_version&quot; : &quot;6.8.0&quot;,    &quot;minimum_index_compatibility_version&quot; : &quot;6.0.0-beta1&quot;  &amp;#125;,  &quot;tagline&quot; : &quot;You Know, for Search&quot;&amp;#125;</code></pre><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>cluster.name</td><td>集群名称，相同名称为一个集群</td></tr><tr><td>node.name</td><td>节点名称，集群模式下每个节点名称唯一</td></tr><tr><td>node.master</td><td>当前节点是否可以被选举为master节点，是：true、否：false</td></tr><tr><td>node.data</td><td>当前节点是否用于存储数据，是：true、否：false</td></tr><tr><td>path.data</td><td>索引数据存放的位置</td></tr><tr><td>path.logs</td><td>日志文件存放的位置</td></tr><tr><td>bootstrap.memory_lock</td><td>需求锁住物理内存，是：true、否：false</td></tr><tr><td>network.host</td><td>监听地址，用于访问该es, 0.0.0.0允许任务服务器访问</td></tr><tr><td>network.publish_host</td><td>可设置成内网ip，用于集群内各机器间通信</td></tr><tr><td>http.port</td><td>es对外提供的http端口，默认 9200</td></tr><tr><td>transport.tcp.port</td><td>TCP的默认监听端口，默认 9300</td></tr><tr><td>discovery.seed_hosts</td><td>es7.x 之后新增的配置，写入候选主节点的设备地址，在开启服务后可以被选为主节点</td></tr><tr><td>cluster.initial_master_nodes</td><td>es7.x 之后新增的配置，初始化一个新的集群时需要此配置来选举master</td></tr><tr><td>http.cors.enabled</td><td>是否支持跨域，是：true，在使用head插件时需要此配置</td></tr><tr><td>http.cors.allow-origin</td><td>“*” 表示支持所有域名</td></tr></tbody></table>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Spring Boot集成Tinymce富文本编辑器</title>
      <link href="/2020/07/02/sping-boot-ji-cheng-tinymce-fu-wen-ben-bian-ji/"/>
      <url>/2020/07/02/sping-boot-ji-cheng-tinymce-fu-wen-ben-bian-ji/</url>
      
        <content type="html"><![CDATA[<h1 id="基础环境"><a href="#基础环境" class="headerlink" title="基础环境"></a>基础环境</h1><ul><li>IDEA</li><li>Spring Boot 2.2.1</li><li>Freemarker</li></ul><h1 id="tinymce简介"><a href="#tinymce简介" class="headerlink" title="tinymce简介"></a>tinymce简介</h1><blockquote><p>TinyMCE是一款易用、且功能强大的所见即所得的富文本编辑器。同类程序有：UEditor、Kindeditor、Simditor、CKEditor、wangEditor、Suneditor、froala等。</p></blockquote><p>经过多番对比（<del>界面好看</del>），认定Tinymce功能更加完善，并且具备可扩展特性，功能完善，遂采用。</p><h1 id="小例子"><a href="#小例子" class="headerlink" title="小例子"></a>小例子</h1><p>下面是tinymce实例化的例子，通过id绑定，渲染页面。tinymce可以嵌入到任意web项目中。编辑内容的保存可以通过post表单的形式提交，也可以自己获取内容提交。</p><pre><code>&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;TinyMCE快速开始示例&lt;/h1&gt;  &lt;form method=&quot;post&quot;&gt;    &lt;textarea id=&quot;demo&quot;&gt;Hello, World!&lt;/textarea&gt;  &lt;/form&gt;&lt;/body  &lt;script src=&#39;tinymce.min.js&#39;&gt;&lt;/script&gt;  &lt;script&gt;  tinymce.init(&amp;#123;    selector: &#39;#demo&#39;//ID绑定    //此处可添加更多特性  &amp;#125;);  &lt;/script&gt;&lt;/html&gt;</code></pre><h1 id="正式开始"><a href="#正式开始" class="headerlink" title="正式开始"></a>正式开始</h1><h2 id="引入Tinymce脚本"><a href="#引入Tinymce脚本" class="headerlink" title="引入Tinymce脚本"></a>引入Tinymce脚本</h2><pre><code>&lt;script src=&quot;/complaints/tinymce/tinymce.min.js&quot;&gt;&lt;/script&gt;</code></pre><h2 id="渲染区域"><a href="#渲染区域" class="headerlink" title="渲染区域"></a>渲染区域</h2><pre><code>&lt;div class=&quot;layui-form-item&quot;&gt;    &lt;textarea id=&quot;content&quot; name=&quot;content&quot;&gt;&lt;/textarea&gt;&lt;/div&gt;</code></pre><h2 id="实例化"><a href="#实例化" class="headerlink" title="实例化"></a>实例化</h2><p>支持图片、视频</p><pre><code>tinymce.init(&amp;#123;            selector: &#39;#content&#39;,//绑定渲染区            height: 600,            plugins: &#39;paste importcss code table advlist fullscreen imagetools  textcolor colorpicker hr  autolink link image lists preview media wordcount&#39;,            toolbar: &#39;styleselect |  formatselect | fontsizeselect | forecolor backcolor | bold italic underline strikethrough | image  media | table | alignleft aligncenter alignright alignjustify | outdent indent | numlist bullist | preview removeformat  hr | paste code  link | undo redo | fullscreen&#39;,            skin: &#39;oxide&#39;,            language: &#39;zh_CN&#39;,//汉化            convert_urls: false,            // relative_urls : true,            images_upload_url: &#39;../tmmedia/upload&#39;,//图片上传地址            images_upload_credentials: true,            image_dimensions: false,            image_class_list: [                &amp;#123;title: &#39;无&#39;, value: &#39;&#39;&amp;#125;,                &amp;#123;title: &#39;预览&#39;, value: &#39;preview&#39;&amp;#125;,            ],            // images_upload_base_path: &#39;/&#39;,            forced_root_block: &#39;p&#39;,            force_p_newlines: true,            importcss_append: true,            content_style: `    *                         &amp;#123; padding:0; margin:0; &amp;#125;    html, body                &amp;#123; height:100%; &amp;#125;    img                       &amp;#123; max-width:100%; display:block;height:auto; &amp;#125;    a                         &amp;#123; text-decoration: none; &amp;#125;    iframe                    &amp;#123; width: 100%; &amp;#125;    p                         &amp;#123; line-height:1.6; margin: 0px; &amp;#125;    table                     &amp;#123; word-wrap:break-word; word-break:break-all; max-width:100%; border:none; border-color:#999; &amp;#125;    .mce-object-iframe        &amp;#123; width:100%; box-sizing:border-box; margin:0; padding:0; &amp;#125;    ul,ol                     &amp;#123; list-style-position:inside; &amp;#125;  `,            insert_button_items: &#39;image link | inserttable&#39;,            // CONFIG: Paste            paste_retain_style_properties: &#39;all&#39;,            paste_word_valid_elements: &#39;*[*]&#39;,        // word需要它            paste_data_images: true,                  // 粘贴的同时能把内容里的图片自动上传            paste_convert_word_fake_lists: false,     // 插入word文档需要该属性            paste_webkit_styles: &#39;all&#39;,            paste_merge_formats: true,            nonbreaking_force_tab: false,            paste_auto_cleanup_on_paste: false,            // CONFIG: Font            fontsize_formats: &#39;10px 11px 12px 14px 16px 18px 20px 24px&#39;,            // CONFIG: StyleSelect            style_formats: [                &amp;#123;                    title: &#39;首行缩进&#39;,                    block: &#39;p&#39;,                    styles: &amp;#123;&#39;text-indent&#39;: &#39;2em&#39;&amp;#125;                &amp;#125;,                &amp;#123;                    title: &#39;行高&#39;,                    items: [                        &amp;#123;title: &#39;1&#39;, styles: &amp;#123;&#39;line-height&#39;: &#39;1&#39;&amp;#125;, inline: &#39;span&#39;&amp;#125;,                        &amp;#123;title: &#39;1.5&#39;, styles: &amp;#123;&#39;line-height&#39;: &#39;1.5&#39;&amp;#125;, inline: &#39;span&#39;&amp;#125;,                        &amp;#123;title: &#39;2&#39;, styles: &amp;#123;&#39;line-height&#39;: &#39;2&#39;&amp;#125;, inline: &#39;span&#39;&amp;#125;,                        &amp;#123;title: &#39;2.5&#39;, styles: &amp;#123;&#39;line-height&#39;: &#39;2.5&#39;&amp;#125;, inline: &#39;span&#39;&amp;#125;,                        &amp;#123;title: &#39;3&#39;, styles: &amp;#123;&#39;line-height&#39;: &#39;3&#39;&amp;#125;, inline: &#39;span&#39;&amp;#125;                    ]                &amp;#125;            ],            // Tab            tabfocus_elements: &#39;:prev,:next&#39;,            object_resizing: true,            // Image            imagetools_toolbar: &#39;rotateleft rotateright | flipv fliph | editimage imageoptions&#39;,            file_picker_types: &#39;media&#39;,            media_live_embeds: true,            //be used to add custom file picker to those dialogs that have it.            file_picker_callback: function (cb, value, meta) &amp;#123;                if (meta.filetype == &#39;media&#39;) &amp;#123;                    //创建一个隐藏的type=file的文件选择input                    let input = document.createElement(&#39;input&#39;);                    input.setAttribute(&#39;type&#39;, &#39;file&#39;);                    input.onchange = function()&amp;#123;                        let file = this.files[0];//只选取第一个文件。如果要选取全部，后面注意做修改                        let xhr, formData;                        xhr = new XMLHttpRequest();                        xhr.open(&#39;POST&#39;, &#39;../tmmedia/upload&#39;);//自定义文件上传                        xhr.withCredentials = true;                        xhr.upload.onprogress = function (e) &amp;#123;                            // 进度(e.loaded / e.total * 100)                        &amp;#125;;                        xhr.onerror = function () &amp;#123;                            console.log(xhr.status);                            return;                        &amp;#125;;                        xhr.onload = function () &amp;#123;                            let json;                            if (xhr.status &lt; 200 || xhr.status &gt;= 300) &amp;#123;                                console.log(&#39;HTTP 错误: &#39; + xhr.status);                                return;                            &amp;#125;                            json = JSON.parse(xhr.responseText);                            console.log(json)                            //接口返回的文件保存地址                            let mediaLocation=json.location;                            //cb()回调函数，将mediaLocation显示在弹框输入框中                            cb(mediaLocation, &amp;#123; title: file.name &amp;#125;);                        &amp;#125;;                        formData = new FormData();                        //假设接口接收参数为file,值为选中的文件                        formData.append(&#39;file&#39;, file);                        //正式使用将下面被注释的内容恢复                        xhr.send(formData);                    &amp;#125;                    //触发点击                    input.click();                &amp;#125;            &amp;#125;        &amp;#125;);</code></pre><p>实现效果<br><img src="http://imgcq.test.upcdn.net/20200702182102.png?!"></p><h2 id="保存功能"><a href="#保存功能" class="headerlink" title="保存功能"></a>保存功能</h2><p>通过 <code>tinymce.activeEditor.getContent()</code>获取编辑区内容，内容为html代码。</p><pre><code>form.on(&#39;submit(save)&#39;, function (data) &amp;#123;            var field = data.field;            //获取内容核心            field.content = tinymce.activeEditor.getContent()            var loadIndex;            loadIndex = layer.load(2);            $.post(&quot;../tmknowledgebase/saveOrUpdate&quot;, field, function (data) &amp;#123;                if (data.code === 200) &amp;#123;                    tools.success(&quot;保存成功!&quot;);                    layer.msg(&quot;成功!&quot;, &amp;#123;time: 1000&amp;#125;, function () &amp;#123;                        layer.close(loadIndex);                        //传给上个页面，刷新table用                        tools.putTempData(&#39;submitOK&#39;, true);                        //关掉对话框                        tools.closeThisDialog();                    &amp;#125;);                &amp;#125; else &amp;#123;                    layer.close(loadIndex)                    tools.error(data.msg);                &amp;#125;            &amp;#125;)        &amp;#125;)</code></pre><h2 id="内容回显"><a href="#内容回显" class="headerlink" title="内容回显"></a>内容回显</h2><p>在保存编辑内容后，如果我们想要再次编辑，需要对以保存内容进行回显，之前提到，保存的内容实际是html片段，因此采用html渲染即可。在此项目中采用Freemarker框架，渲染代码如下：</p><p><code>$&#123;data.content!&quot;&quot;&#125;</code>为后台返回的编辑区内容</p><pre><code> &lt;div class=&quot;layui-card-body layui-form-item&quot;&gt;    &lt;textarea id=&quot;content&quot; name=&quot;content&quot;&gt;$&amp;#123;data.content!&quot;&quot;&amp;#125;&lt;/textarea&gt;&lt;/div&gt;</code></pre><p>实例化区域代码与上文相同</p><pre><code> tinymce.init(&amp;#123;            selector: &#39;#content&#39;,            height: 600,            ...</code></pre><h2 id="汉化"><a href="#汉化" class="headerlink" title="汉化"></a>汉化</h2><p>tinymce默认是英文的，需要引入汉化包zh_CN.js到langs目录下,在<code>language</code>属性下添加<code>zh_CN</code>.</p><pre><code>tinymce.init(&amp;#123;    selector: &#39;#content&#39;,    language:&#39;zh_CN&#39;,//注意大小写&amp;#125;);</code></pre><h2 id="图片上传"><a href="#图片上传" class="headerlink" title="图片上传"></a>图片上传</h2><p>首先后台自定义文件上传接口</p><p><strong>注意</strong>：需要指定具体的下载地址，否则上传后文件无法回显<code> map.put(&quot;location&quot;, &quot;当前文件实际下载地址&quot;);</code></p><pre><code>@PostMapping(value = &quot;/tmmedia/upload&quot;)    public Object downloadFile(@RequestParam MultipartFile file) &amp;#123;        Map&lt;String, String&gt; map = new HashMap&lt;&gt;();        try &amp;#123;            String fileName = file.getOriginalFilename();            String extension = StringUtils.getFilenameExtension(fileName);            String name = IdUtil.fastUUID() + &quot;.&quot; + extension;            ftpUtils.upload(dir, name, file);//            文件下载，供前台回显            map.put(&quot;location&quot;, downloadUrl + dir + &quot;/&quot; + name);        &amp;#125; catch (Exception e) &amp;#123;            e.printStackTrace();            map.put(&quot;location&quot;, &quot;&quot;);        &amp;#125;        return map;    &amp;#125;</code></pre><p>渲染区配置</p><pre><code>tinymce.init(&amp;#123;    selector: &#39;#content&#39;,    language:&#39;zh_CN&#39;,//注意大小写    plugins:  image &#39;,    images_upload_url: &#39;../tmmedia/upload&#39;,//图片上传地址    images_upload_credentials: true,    image_dimensions: false,    image_class_list: [        &amp;#123;title: &#39;无&#39;, value: &#39;&#39;&amp;#125;,        &amp;#123;title: &#39;预览&#39;, value: &#39;preview&#39;&amp;#125;,    ],&amp;#125;);</code></pre><h2 id="视频播放"><a href="#视频播放" class="headerlink" title="视频播放"></a>视频播放</h2><p>首先后台自定义文件上传接口</p><p>==注意==：需要指定具体的下载地址，否则上传后文件无法回显<code> map.put(&quot;location&quot;, &quot;当前文件实际下载地址&quot;);</code></p><pre><code>@PostMapping(value = &quot;/tmmedia/upload&quot;)    public Object downloadFile(@RequestParam MultipartFile file) &amp;#123;        Map&lt;String, String&gt; map = new HashMap&lt;&gt;();        try &amp;#123;            String fileName = file.getOriginalFilename();            String extension = StringUtils.getFilenameExtension(fileName);            String name = IdUtil.fastUUID() + &quot;.&quot; + extension;            ftpUtils.upload(dir, name, file);//            文件下载，供前台回显            map.put(&quot;location&quot;, downloadUrl + dir + &quot;/&quot; + name);        &amp;#125; catch (Exception e) &amp;#123;            e.printStackTrace();            map.put(&quot;location&quot;, &quot;&quot;);        &amp;#125;        return map;    &amp;#125;</code></pre><p>渲染区配置</p><pre><code>tinymce.init(&amp;#123;    selector: &#39;#content&#39;,    language:&#39;zh_CN&#39;,//注意大小写    plugins:  media &#39;,    file_picker_types: &#39;media&#39;,            media_live_embeds: true,            //be used to add custom file picker to those dialogs that have it.            file_picker_callback: function (cb, value, meta) &amp;#123;                if (meta.filetype == &#39;media&#39;) &amp;#123;                    //创建一个隐藏的type=file的文件选择input                    let input = document.createElement(&#39;input&#39;);                    input.setAttribute(&#39;type&#39;, &#39;file&#39;);                    input.onchange = function()&amp;#123;                        let file = this.files[0];//只选取第一个文件。如果要选取全部，后面注意做修改                        let xhr, formData;                        xhr = new XMLHttpRequest();                        xhr.open(&#39;POST&#39;, &#39;../tmmedia/upload&#39;);//自定义文件上传                        xhr.withCredentials = true;                        xhr.upload.onprogress = function (e) &amp;#123;                            // 进度(e.loaded / e.total * 100)                        &amp;#125;;                        xhr.onerror = function () &amp;#123;                            console.log(xhr.status);                            return;                        &amp;#125;;                        xhr.onload = function () &amp;#123;                            let json;                            if (xhr.status &lt; 200 || xhr.status &gt;= 300) &amp;#123;                                console.log(&#39;HTTP 错误: &#39; + xhr.status);                                return;                            &amp;#125;                            json = JSON.parse(xhr.responseText);                            console.log(json)                            //接口返回的文件保存地址                            let mediaLocation=json.location;                            //cb()回调函数，将mediaLocation显示在弹框输入框中                            cb(mediaLocation, &amp;#123; title: file.name &amp;#125;);                        &amp;#125;;                        formData = new FormData();                        //假设接口接收参数为file,值为选中的文件                        formData.append(&#39;file&#39;, file);                        //正式使用将下面被注释的内容恢复                        xhr.send(formData);                    &amp;#125;                    //触发点击                    input.click();                &amp;#125;            &amp;#125;&amp;#125;);</code></pre>]]></content>
      
      
      <categories>
          
          <category> Spring Boot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tinymce </tag>
            
            <tag> Spring Boot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx常用场景</title>
      <link href="/2020/06/12/nginx-chang-yong-chang-jing/"/>
      <url>/2020/06/12/nginx-chang-yong-chang-jing/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>Nginx是一款轻量级的Web服务器、反向代理服务器，由于它的内存占用少，启动极快，高并发能力强，在互联网项目中广泛应用。</p><h1 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h1><h2 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h2><p><strong>轮询</strong></p><pre><code>upstream test &amp;#123;  server 10.200.100.3:8080;  server 10.200.100.4:8081;&amp;#125;upstream admin &amp;#123;  server 10.200.100.3:9080;  server 10.200.100.4:9081;&amp;#125;server &amp;#123;  listen       81;                                                           server_name  localhost;                                               #映射地址  location / &amp;#123;    ssi on;    ssi_silent_errors on;    proxy_read_timeout 300;    proxy_set_header Host $host:$server_port;    proxy_set_header X-Real-IP $remote_addr;    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;    # proxy_pass内容与upstream对应    proxy_pass http://test;    proxy_redirect default;  &amp;#125;  #映射地址指定多个，根据访问路径匹配不同地址`location`  location /admin &amp;#123;    ssi on;    ssi_silent_errors on;    proxy_read_timeout 300;    proxy_set_header Host $host:$server_port;    proxy_set_header X-Real-IP $remote_addr;    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;    # proxy_pass内容与upstream对应    proxy_pass http://admin;    proxy_redirect default;  &amp;#125;&amp;#125;</code></pre><p><strong>设置权重</strong></p><p>通过weight指定访问服务器权重，权重越高代表服务器被访问的几率的越大。</p><pre><code>  upstream test &amp;#123;    server localhost:8080 weight=9;    server localhost:8081 weight=1;  &amp;#125;</code></pre><p><strong>iphash</strong></p><p>iphash的每个请求按访问ip的hash结果分配，这样每个访客固定访问一个后端服务器，可以解决session的问题。(分布式session同步可采用redis解决)</p><pre><code>upstream test &amp;#123;  ip_hash;  server localhost:8080;  server localhost:8081;&amp;#125;</code></pre><h2 id="反正代理"><a href="#反正代理" class="headerlink" title="反正代理"></a>反正代理</h2><blockquote><p>反向代理隐藏了真实的服务端，例如访问<code>http://www.baidu.com</code>，可能有成千上万的程序为我们服务。代理对象为服务端。</p></blockquote><pre><code>server &amp;#123;    listen       80;                                                           server_name  localhost;                                                 location / &amp;#123;    proxy_pass http://10.200.100.2:8080;    proxy_set_header Host $host:$server_port;  &amp;#125;&amp;#125;</code></pre><blockquote><p>正向代理: 它隐藏了真实的请求客户端，服务端不知道真实的客户端是谁，客户端请求的服务都被代理服务器代替来请求.代理对象为客户端。</p></blockquote><h2 id="HTTP服务器"><a href="#HTTP服务器" class="headerlink" title="HTTP服务器"></a>HTTP服务器</h2><p>Nginx本身也是一个静态资源的服务器，当只有静态资源的时候，就可以使用Nginx来做服务器。</p><pre><code>server &amp;#123;  listen       80;                                                           server_name  localhost;                                                 location / &amp;#123;  #指定静态文件位置    root   /opt/dist;    #访问首页    index  index.html;  &amp;#125;&amp;#125;</code></pre><h1 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h1><p><strong>解压安装常用</strong></p><pre><code>查看nginx安装位置：whereis nginx启动：$ /usr/local/nginx/sbin/nginx热重启：$ /usr/local/nginx/sbin/nginx –s reload停止：$ /usr/local/nginx/sbin/nginx –s stop测试配置文件是否正常：$ /usr/local/nginx/sbin/nginx –t强制关闭：$ pkill nginx</code></pre><p><strong>yum安装常用</strong></p><pre><code>systemctl enable nginx   # 设置开机启动 Nginxsystemctl disable nginx  # 关闭开机启动 Nginxsystemctl start nginx    # 启动 Nginxsystemctl stop nginx     # 停止 Nginxsystemctl restart nginx  # 重启 Nginxsystemctl reload nginx   # 重新加载 Nginxsystemctl status nginx   # 查看 Nginx 运行状态</code></pre>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nginx解压版平滑升级</title>
      <link href="/2020/03/25/nginx-jie-ya-ban-ping-hua-sheng-ji/"/>
      <url>/2020/03/25/nginx-jie-ya-ban-ping-hua-sheng-ji/</url>
      
        <content type="html"><![CDATA[<h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><ul><li>nginx 1.16.1</li><li>redhat</li></ul><h1 id="操作过程"><a href="#操作过程" class="headerlink" title="操作过程"></a>操作过程</h1><p><strong><em>做好配置备份</em></strong></p><p>下载<a href="http://nginx.org/download/nginx-1.16.1.tar.gz">nginx1.16.1</a>,进行解压操作。</p><pre><code>wget http://nginx.org/download/nginx-1.16.1.tar.gztar -xzvf nginx-1.16.1.tar.gz</code></pre><p>进入解压后的文件夹，进行编译，不进行安装操作</p><pre><code>cd nginx-1.16.1./configure &amp;&amp; make</code></pre><p>备份旧版本nginx</p><pre><code>  mv /usr/local/nginx/sbin/nginx /usr/local/nginx/sbin/nginx114.old</code></pre><p>将刚编译后的文件替换原有文件，编译后的文件在<code>objs</code>目录下 </p><pre><code>cp objs/nginx /usr/local/nginx/sbin/</code></pre><p>平滑升级，旧的Nginx主进程会变为<code>xxx.oldbin</code>，然后执行新版 nginx。两个版本会同时存在，共同处理请求。</p><pre><code> kill -USR2 `cat /usr/local/nginx/logs/nginx.pid`</code></pre><p>关闭旧版本nginx</p><pre><code> kill -QUIT `cat /usr/local/nginx/logs/nginx.pid.oldbin`</code></pre><p>查看升级后版本</p><pre><code> /usr/local/nginx/sbin/nginx -v</code></pre><p>操作过程</p><p><img src="http://imgcq.test.upcdn.net/20200325175159.png?!"></p>]]></content>
      
      
      <categories>
          
          <category> 软件安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>redis 4.14单机\哨兵模式搭建</title>
      <link href="/2020/03/11/redis-4.14-shao-bing-mo-shi-da-jian/"/>
      <url>/2020/03/11/redis-4.14-shao-bing-mo-shi-da-jian/</url>
      
        <content type="html"><![CDATA[<h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><ul><li>redis:4.0.14</li><li>linux</li><li>1主2从</li></ul><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="下载redis"><a href="#下载redis" class="headerlink" title="下载redis"></a>下载redis</h2><p><a href="http://download.redis.io/releases/redis-4.0.14.tar.gz">redis-4.0.14.tar.gz</a></p><h2 id="配置redis"><a href="#配置redis" class="headerlink" title="配置redis"></a>配置redis</h2><p>解压 <code>tar -xzvf redis-4.0.14.tar.gz</code></p><p>编译<br><code>cd redis-4.0.14/</code></p><p>执行<code>make</code></p><p>结束后，在<code>redis-4.0.14</code>新建config文件夹<br><code>mkdir config</code></p><p>拷贝redis配置文件</p><pre><code>cp redis.conf ../config/redis-6301.confcp redis.conf ../config/redis-6302.confcp redis.conf ../config/redis-6303.conf</code></pre><p>配置三个redis.conf</p><pre><code>vim redis-6301.conf</code></pre><p>主节点</p><pre><code>//服务器ip#bind 192.168.18.128protected-mode noport 6301&lt;!--后台启动--&gt;daemonize yessupervised nopidfile &quot;/var/run/redis_6301.pid&quot;dbfilename &quot;6301dump.rdb&quot;masterauth &quot;redis&quot;slave-read-only no   # 从节点不仅可以读，也可以写，yes为从节点只读</code></pre><p>从节点添加</p><pre><code>//主节点ip portslaveof 192.168.18.128 6301</code></pre><p>另外修改对应端口</p><p>启动</p><pre><code>./redis-server ../config/redis-6301.conf./redis-server ../config/redis-6302.conf ./redis-server ../config/redis-6303.conf </code></pre><p>查看</p><pre><code>./redis-cli -h 192.168.18.128 -p 6301&lt;!--验证--&gt;auth redis&lt;!--显示信息--&gt;info</code></pre><p>显示主从信息</p><pre><code># Replicationrole:master  //主节点connected_slaves:2slave0:ip=192.168.18.128,port=6301,state=online,offset=6359422,lag=1slave1:ip=192.168.18.128,port=6302,state=online,offset=6359279,lag=1master_replid:82dd642ad60846cd858cfa20e86cda7c4a043881master_replid2:0000000000000000000000000000000000000000master_repl_offset:6359565second_repl_offset:-1repl_backlog_active:1repl_backlog_size:1048576repl_backlog_first_byte_offset:5310990repl_backlog_histlen:1048576</code></pre><h1 id="哨兵模式配置"><a href="#哨兵模式配置" class="headerlink" title="哨兵模式配置"></a>哨兵模式配置</h1><p>配置项</p><pre><code>port 26301sentinel monitor mymaster 192.168.18.128 6301 2sentinel auth-pass mymaster redissentinel down-after-milliseconds mymaster 15000sentinel parallel-syncs mymaster 1sentinel failover-timeout mymaster 80000bind 192.168.18.128protected-mode nodaemonize yes //允许后台启动</code></pre><p>向config文件夹中拷贝三个配置文件</p><pre><code>cp sentinel.conf ../config/sentinel-6301.confcp sentinel.conf ../config/sentinel-6302.confcp sentinel.conf ../config/sentinel-6303.conf</code></pre><p>从节点修改端口26302，26303</p><p>启动</p><pre><code>./redis-sentinel ../config/sentinel-26301.conf./redis-sentinel ../config/sentinel-26302.conf./redis-sentinel ../config/sentinel-26303.conf</code></pre><h2 id="结果验证"><a href="#结果验证" class="headerlink" title="结果验证"></a>结果验证</h2><p>查看进程<br><code>ps -ef|grep redis</code></p><p><img src="http://imgcq.test.upcdn.net/20190403162358.png?!"></p><p>验证下主从同步</p><p><code>kill -9 13028</code><br>查看主节点变更情况</p><h2 id="spring-boot集成"><a href="#spring-boot集成" class="headerlink" title="spring boot集成"></a>spring boot集成</h2><p>配置文件application.yml</p><pre><code>spring:    redis:    #    url: 127.0.0.1   // 单机使用    #    host: localhost    #    port: 6379        timeout: 3600        password: redis        sentinel:              nodes: 192.168.18.128:26301,192.168.18.128:26302,192.168.18.128:26303              master: mymaster</code></pre><p>WebMvcConfigurer配置</p><pre><code>@Configurationpublic class WebConfig implements WebMvcConfigurer &amp;#123;    @Value(&quot;#&amp;#123;&#39;$&amp;#123;spring.redis.sentinel.nodes&amp;#125;&#39;.split(&#39;,&#39;)&amp;#125;&quot;)    private List&lt;String&gt; nodes;    @Value(&quot;$&amp;#123;spring.redis.password&amp;#125;&quot;)    private String redisPassword;    @Value(&quot;$&amp;#123;spring.redis.sentinel.master&amp;#125;&quot;)    private String redisMaster;    @Autowired    private FastJsonHttpMessageConverter fastJsonHttpMessageConverter;    @Bean    public RestTemplateBuilder restTemplateBuilder() &amp;#123;        RestTemplateBuilder builder = new RestTemplateBuilder();        return builder.messageConverters(fastJsonHttpMessageConverter);    &amp;#125;    @Bean    public RestTemplate restTemplate() &amp;#123;        return restTemplateBuilder().build();    &amp;#125;    @Bean    JedisConnectionFactory jedisConnectionFactory() &amp;#123;        return new JedisConnectionFactory(sentinelConfiguration());    &amp;#125;    @Bean    public RedisSentinelConfiguration sentinelConfiguration()&amp;#123;        RedisSentinelConfiguration redisSentinelConfiguration = new RedisSentinelConfiguration();        //配置matser的名称        redisSentinelConfiguration.master(redisMaster);        //配置redis的哨兵sentinel        Set&lt;RedisNode&gt; redisNodeSet = new HashSet&lt;&gt;();        nodes.forEach(x-&gt;&amp;#123;            redisNodeSet.add(new RedisNode(x.split(&quot;:&quot;)[0],Integer.parseInt(x.split(&quot;:&quot;)[1])));        &amp;#125;);        log.info(&quot;\nredisNodeSet --&gt;&amp;#123;&amp;#125;&quot;,redisNodeSet);        redisSentinelConfiguration.setSentinels(redisNodeSet);        redisSentinelConfiguration.setPassword(RedisPassword.of(redisPassword));        return redisSentinelConfiguration;    &amp;#125;    @Bean    public RedisTemplate&lt;String, Object&gt; redisTemplate() &amp;#123;        RedisTemplate&lt;String, Object&gt; template = new RedisTemplate&lt;&gt;();        template.setConnectionFactory(jedisConnectionFactory());        return template;    &amp;#125;&amp;#125;</code></pre><p>启动，连接成功会显示具体信息</p><pre><code>redis.clients.jedis.JedisSentinelPool    : Trying to find master from available Sentinels...redis.clients.jedis.JedisSentinelPool    : Redis master running at 192.168.18.128:6303, starting Sentinel listeners...redis.clients.jedis.JedisSentinelPool    : Created JedisPool to master at 192.168.18.128:6303</code></pre><p>连接异常情况</p><pre><code>2019-04-04 09:55:44.961  INFO 24056 --- [           main] redis.clients.jedis.JedisSentinelPool    : Trying to find master from available Sentinels...2019-04-04 09:55:44.973  WARN 24056 --- [           main] redis.clients.jedis.JedisSentinelPool    : Cannot get master address from sentinel running @ 192.168.18.1281:26302. Reason: redis.clients.jedis.exceptions.JedisConnectionException: java.net.UnknownHostException: 192.168.18.1281. Trying next one.2019-04-04 09:55:44.973  WARN 24056 --- [           main] redis.clients.jedis.JedisSentinelPool    : Cannot get master address from sentinel running @ 192.168.18.1281:26301. Reason: redis.clients.jedis.exceptions.JedisConnectionException: java.net.UnknownHostException: 192.168.18.1281. Trying next one.2019-04-04 09:55:44.973  WARN 24056 --- [           main] redis.clients.jedis.JedisSentinelPool    : Cannot get master address from sentinel running @ 192.168.18.1281:26303. Reason: redis.clients.jedis.exceptions.JedisConnectionException: java.net.UnknownHostException: 192.168.18.1281. Trying next one.</code></pre><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>防火墙端口开启</p>]]></content>
      
      
      <categories>
          
          <category> 软件安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nginx 1.14.2解压版安装</title>
      <link href="/2020/03/11/nginx-1.14.2-jie-ya-ban-an-zhuang/"/>
      <url>/2020/03/11/nginx-1.14.2-jie-ya-ban-an-zhuang/</url>
      
        <content type="html"><![CDATA[<h2 id="安装包"><a href="#安装包" class="headerlink" title="安装包"></a>安装包</h2><ul><li>nginx-1.14.2.tar.gz</li><li>openssl-fips-2.0.16.tar.gz</li><li>zlib-1.2.11.tar.gz</li><li>pcre-8.43.tar.gz</li></ul><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>先安装依赖，然后安装nginx</p><p>openssl</p><pre><code>tar -xzvf openssl-fips-2.0.16.tar.gzcd openssl-fips-2.0.16/./config &amp;&amp; make &amp;&amp; make install</code></pre><p>pcre</p><pre><code>tar -xzvf pcre-8.43.tar.gz cd pcre-8.43/./configure &amp;&amp; make &amp;&amp; make install</code></pre><p>zlib</p><pre><code>tar -zxvf zlib-1.2.11.tar.gz cd zlib-1.2.11 ./configure &amp;&amp; make &amp;&amp; make install</code></pre><p>最后nginx</p><pre><code>tar -zxvf nginx-1.14.2.tar.gz cd nginx-1.14.2 ./configure &amp;&amp; make &amp;&amp; make install</code></pre><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p><img src="http://imgcq.test.upcdn.net/20190404144507.png?!"></p><h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><pre><code>&lt;!---启动-&gt;/usr/local/nginx/sbin/nginx&lt;!--重启--&gt;/usr/local/nginx/sbin/nginx -s reload&lt;!--停止--&gt;/usr/local/nginx/sbin/nginx -s stop&lt;!--查看nginx安装位置--&gt;whereis nginx&lt;!---配置文件-&gt;cd /usr/local/nginx/confvim nginx.conf</code></pre>]]></content>
      
      
      <categories>
          
          <category> 软件安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker安装oracle 11g</title>
      <link href="/2020/03/11/docker-an-zhuang-oracle/"/>
      <url>/2020/03/11/docker-an-zhuang-oracle/</url>
      
        <content type="html"><![CDATA[<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><ul><li>主机win10,宿主机 Ubuntu 18.04</li><li>Docker version 18.09.2</li><li>oracle 11g</li><li>Vmware Workstaion 15 Pro</li></ul><h2 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h2><p>安装docker有两种方式，一种从Ubuntu的存储库安装，这种安装方式docker版本不是最新的。第二种从Docker存储库安装。这里我选用的是第一种。</p><p><strong>安装</strong></p><pre><code>sudo apt install docker.io</code></pre><p><strong>启动，并添加开机启动</strong></p><pre><code>systemctl start docker  //启动systemctl enable docker  //开机启动</code></pre><p><strong>查看安装版本</strong></p><pre><code>docker --version</code></pre><h2 id="docker常用命令"><a href="#docker常用命令" class="headerlink" title="docker常用命令"></a>docker常用命令</h2><p><strong>搜索镜像</strong></p><pre><code>//搜索oracle镜像docker search oracle  </code></pre><p><strong>下载镜像</strong></p><p>pull命令将从指定Docker Register上下载镜像</p><pre><code>docker pull oracle </code></pre><p><strong>列出镜像</strong></p><p>images命令将列出已下载镜像</p><pre><code>docker images</code></pre><p><strong>删除镜像</strong></p><p>rmi命令可删除指定镜像</p><pre><code>docker rmi  hello-world</code></pre><h2 id="安装oracle"><a href="#安装oracle" class="headerlink" title="安装oracle"></a>安装oracle</h2><p><strong>下载镜像</strong></p><p>文件有点大，建议先将Ubuntu的下载源更改为国内的。</p><pre><code>docker pull registry.cn-hangzhou.aliyuncs.com/helowin/oracle_11g</code></pre><p><strong>新建镜像并启动</strong></p><p>使用root用户操作</p><p>docker run命令 <code>-d</code>后台启动，<code>-p</code>指定端口映射 </p><pre><code>docker run -d -p 1521:1521 --name oracle_11g registry.aliyuncs.com/helowin/oracle_11g</code></pre><p>如果容器停止使用docker start 命令启动</p><pre><code>docker start oracle_11g</code></pre><p>查看容器状态</p><pre><code>docker ps</code></pre><h2 id="修改用户信息"><a href="#修改用户信息" class="headerlink" title="修改用户信息"></a>修改用户信息</h2><ol><li>进入镜像内，修改信息</li></ol><pre><code>docker exec -it oracle_11g bash</code></pre><ol start="2"><li>root用户操作，root用户密码<code>helowin</code></li></ol><p>编辑<code>/etc/profile</code></p><pre><code>export ORACLE_HOME=/home/oracle/app/oracle/product/11.2.0/dbhome_2export ORACLE_SID=helowinexport PATH=$ORACLE_HOME/bin:$PATH</code></pre><p>使文件生效<code>source /etc/profile</code></p><ol start="3"><li>添加软链接</li></ol><pre><code>ln -s $ORACLE_HOME/bin/sqlplus /usr/bin</code></pre><ol start="4"><li>切换oracle用户,修改密码</li></ol><p><code>su - oracle</code></p><pre><code>alter user system identified by 密码;alter user sys identified by 密码;ALTER PROFILE DEFAULT LIMIT PASSWORD_LIFE_TIME UNLIMITED;</code></pre><h2 id="测试一下"><a href="#测试一下" class="headerlink" title="测试一下"></a>测试一下</h2><pre><code>ip:宿主机ip端口:1521SID: helowin用户名:****密码:****</code></pre><h2 id="结束了么？"><a href="#结束了么？" class="headerlink" title="结束了么？"></a>结束了么？</h2><p>并没有，我的最终目的是让其他同事也访问我的oracle，所以需要做一步端口转发，将虚拟机1521端口映射到主机的某个端口上，然后通过主机暴露出的ip:port访问。</p><h3 id="选择编辑，打开虚拟网络编辑器"><a href="#选择编辑，打开虚拟网络编辑器" class="headerlink" title="选择编辑，打开虚拟网络编辑器"></a>选择编辑，打开虚拟网络编辑器</h3><p>1.前提虚拟机已关机<br>2.选择更改设置<br>3.选择NAT设置</p><p><img src="http://imgcq.test.upcdn.net/EB5F7A58E52B7087FFF188704B0EFC2F.png?!"></p><p>4.选择添加</p><p>我选择1522端口作为映射</p><p>222为远程访问虚拟机的端口（如果需要，现在虚拟机安装<code>openssh-server</code>）</p><p><img src="http://imgcq.test.upcdn.net/4C9D950D53CE966D298E7818EA869429.png?!"></p><p><strong>参考文章</strong></p><p><a href="https://www.howtoing.com/ubuntu-docker">Docker：Ubuntu 18.04 LTS上的安装和基本使用</a></p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Oracle Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Oracle笔记</title>
      <link href="/2020/03/11/oracle-bi-ji/"/>
      <url>/2020/03/11/oracle-bi-ji/</url>
      
        <content type="html"><![CDATA[<h1 id="Oracle权限赋予和新建序列"><a href="#Oracle权限赋予和新建序列" class="headerlink" title="Oracle权限赋予和新建序列"></a>Oracle权限赋予和新建序列</h1><h2 id="赋予表和序列权限"><a href="#赋予表和序列权限" class="headerlink" title="赋予表和序列权限"></a>赋予表和序列权限</h2><pre><code>grant select,insert,update on res.plan_task to isharegrant select,insert,update on res.plan_task_instance to isharegrant select,insert,update on res.plan_task_object to isharegrant select,insert,update on res.plan_task_photo to isharegrant select,alter on res.seq_plan_task to isharegrant select,alter on res.seq_plan_task_instance to isharegrant select,alter on res.seq_plan_task_object to isharegrant select,alter on res.seq_plan_task_photo to ishare</code></pre><h2 id="新建序列"><a href="#新建序列" class="headerlink" title="新建序列"></a>新建序列</h2><pre><code>CREATE SEQUENCE RES.seq_plan_task_photoINCREMENT BY 1   START WITH 1      MINVALUE 1MAXVALUE 99999999999999NOCYCLE  CACHE 2;</code></pre><p>序列说明<br><img src="http://imgcq.test.upcdn.net/image20181015113548.png" alt="序列说明"></p><h2 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h2><pre><code>--在数据库中查找表名select * from user_tables where  table_name like &#39;tablename%&#39;;--查看该表的所有索引select * from all_indexes where table_name = &#39;MANAGEDELEMENT&#39;;--查看该表的所有索引列select* from all_ind_columns where table_name = &#39;MANAGEDELEMENT&#39;;--创建索引create index INDEX_MANAGEDELEMENT on MANAGEDELEMENT(EMS);</code></pre><h1 id="新建表空间-用户授权"><a href="#新建表空间-用户授权" class="headerlink" title="新建表空间/用户授权"></a>新建表空间/用户授权</h1><ul><li>查询数据表空间位置<pre><code>select name from v$datafile;</code></pre></li><li>创建表空间 <pre><code>CREATE tablespace etl_space datafile &#39;/opt/oracle/oradata/orcl/etl01.dbf&#39;size 500m autoextend on next 5M maxsize unlimited;</code></pre></li><li>创建用户 <pre><code>CREATE USER tomcat_etl IDENTIFIED BY tomcat_etlDEFAULT tablespace etl_space temporary tablespace tempprofile DEFAULT ;</code></pre></li><li>用户授权 <pre><code>grant connect,resource,dba to tomcat_etl;</code></pre></li></ul><h1 id="修改字符集"><a href="#修改字符集" class="headerlink" title="修改字符集"></a>修改字符集</h1><p>进入sqlplus</p><pre><code>sqlplus / as sysdba</code></pre><p>修改字符集</p><pre><code>SQL&gt;SHUTDOWN IMMEDIATESQL&gt;STARTUP MOUNTSQL&gt;ALTER SYSTEM ENABLE RESTRICTED SESSION;SQL&gt;ALTER SYSTEM SET JOB_QUEUE_PROCESSES=0;SQL&gt;ALTER SYSTEM SET AQ_TM_PROCESSES=0;SQL&gt;ALTER DATABASE OPEN;//ZHS16GBK、AL32UTF8SQL&gt;ALTER DATABASE CHARACTER SET INTERNAL_USE ZHS16GBK;SQL&gt;SHUTDOWN IMMEDIATE;//启动数据库SQL&gt;STARTUP;//查看字符集SQL&gt;select userenv(&#39;language&#39;) from dual;</code></pre><h1 id="卸载oracle"><a href="#卸载oracle" class="headerlink" title="卸载oracle"></a>卸载oracle</h1><p>进入sqlplus</p><pre><code>sqlplus / as sysdba</code></pre><p>停止Oracle数据库服务</p><pre><code>shutdown immediate;</code></pre><p>停止监听服务</p><pre><code>lsnrctl stop</code></pre><p>删除/usr/local/bin下的文件</p><pre><code>coraenv  dbhome  oraenv</code></pre><p>删除/etc下的文件</p><pre><code>oraInst.loc oratab</code></pre><p>删除/opt下ORCLfmap</p><pre><code>rm –rf ORCLfmap</code></pre><p>删除oracle安装目录<code>ORACLE_HOME</code></p><p>删除用户和组</p><pre><code>userdel –r oraclegroupdel oinstallgroupdel dba</code></pre><h1 id="密码过期"><a href="#密码过期" class="headerlink" title="密码过期"></a>密码过期</h1><pre><code>-- 查询用户select username,profile from dba_users--查看密码有效期Select * FROM dba_profiles s Where s.profile=&#39;DEFAULT&#39; AND resource_name=&#39;PASSWORD_LIFE_TIME&#39;-- 设置密码永久有效 ALTER PROFILE DEFAULT LIMIT PASSWORD_LIFE_TIME UNLIMITED--修改密码alter user ishare identified by 111111</code></pre><h1 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h1><h2 id="ORA－00054：资源正忙，要求指定NOWAIT"><a href="#ORA－00054：资源正忙，要求指定NOWAIT" class="headerlink" title="ORA－00054：资源正忙，要求指定NOWAIT"></a>ORA－00054：资源正忙，要求指定NOWAIT</h2><pre><code>select session_id from v$locked_object; SELECT sid, serial#, username, osuser FROM v$session where sid = 39; ALTER SYSTEM KILL SESSION &#39;39,1290&#39;;</code></pre>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ORACLE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Layui动态表格的增删改查</title>
      <link href="/2019/01/23/layui-dong-tai-biao-ge-de-zeng-shan-gai-cha/"/>
      <url>/2019/01/23/layui-dong-tai-biao-ge-de-zeng-shan-gai-cha/</url>
      
        <content type="html"><![CDATA[<h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>查询按钮</p><pre><code> &lt;button class=&quot;layui-btn&quot; lay-submit lay-filter=&quot;lay-index-search&quot;&gt;        &lt;i class=&quot;layui-icon layui-icon-search&quot;&gt;&lt;/i&gt; &lt;/button&gt;</code></pre><p>表格主体</p><pre><code>&lt;table id=&quot;lay-index-list&quot; lay-filter=&quot;lay-index-list-filter&quot;&gt;&lt;/table&gt;</code></pre><p>工具栏（表格外）</p><pre><code>&lt;script type=&quot;text/html&quot; id=&quot;toolbarindex&quot;&gt;    &lt;div style=&quot;padding-bottom: 10px;&quot;&gt;        &lt;button class=&quot;layui-btn layuiadmin-btn-list&quot; data-type=&quot;addindex&quot;&gt;新增&lt;/button&gt;        &lt;button class=&quot;layui-btn layuiadmin-btn-list&quot; data-type=&quot;batchdelindex&quot;&gt;删除&lt;/button&gt;    &lt;/div&gt;&lt;/script&gt;</code></pre><p>工具栏（表格内）</p><pre><code>&lt;script type=&quot;text/html&quot; id=&quot;table-tool-list&quot;&gt;    &lt;a class=&quot;layui-btn layui-btn-normal layui-btn-xs&quot; lay-event=&quot;edit&quot;&gt;&lt;i            class=&quot;layui-icon layui-icon-edit&quot;&gt;&lt;/i&gt;修改&lt;/a&gt;&lt;/script&gt;</code></pre><h2 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h2><p>监听查询按钮</p><pre><code>//监听搜索        form.on(&#39;submit(lay-index-search)&#39;, function (data) &amp;#123;            var field = data.field;            //执行重载            table.reload(&#39;lay-index-list&#39;, &amp;#123;                where: field            &amp;#125;);        &amp;#125;);</code></pre><p>表格部分</p><pre><code>//表格初始化        table.render(&amp;#123;            elem: &#39;#lay-index-list&#39;//绑定表格id            , url: &#39;/abcefg&#39; //表格接口            , method: &#39;post&#39; //请求方式            , toolbar: &#39;#toolbarindex&#39; //自定义工具栏            , defaultToolbar: []            , title: &#39;数据表&#39;            , totalRow: false            , where: &amp;#123; //查询参数                &quot;name1&quot;: &#39;12&#39;,                &quot;name2&quot;: &#39;34&#39;            &amp;#125;            , cols: [[                &amp;#123;type: &#39;checkbox&#39;, fixed: &#39;left&#39;&amp;#125;                , &amp;#123;field: &#39;kpiName&#39;, title: &#39;指标名称&#39;, width: 260&amp;#125;                , &amp;#123;                    field: &#39;kpiCode&#39;, title: &#39;指标编码&#39;, width: 180,  templet: function (res) &amp;#123;                        return &#39;&lt;em&gt;&#39; + res.kpiCode + &#39;&lt;/em&gt;&#39;                    &amp;#125;                &amp;#125;                , &amp;#123;field: &#39;kpiDevType&#39;, title: &#39;设备类型&#39;, width: 100&amp;#125;                , &amp;#123;field: &#39;kpiUnits&#39;, title: &#39;指标单位&#39;, width: 100&amp;#125;                , &amp;#123;                    field: &#39;kpiLevel&#39;, title: &#39;指标级别&#39;, width: 100, templet: function (res) &amp;#123;                        if (res.kpiLevel === &quot;2&quot;) &amp;#123;                            return &#39;网元&#39;&amp;#125; else if (res.kpiLevel === &quot;3&quot;) &amp;#123;                            return &#39;板卡&#39;&amp;#125; else if (res.kpiLevel === &quot;4&quot;) &amp;#123;                            return &#39;端口&#39;&amp;#125;&amp;#125;&amp;#125;                , &amp;#123;field: &#39;kpiDesc&#39;, title: &#39;描述&#39;, width: 150&amp;#125;                , &amp;#123;fixed: &#39;right&#39;, title: &#39;操作&#39;, toolbar: &#39;#table-tool-list&#39;, width: 150&amp;#125;  //绑定操作            ]]            , page: true            , limit: 10            , limits: [10, 20, 50]        &amp;#125;);</code></pre><h2 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h2><pre><code>table.on(&#39;tool(lay-index-list-filter)&#39;, function (obj) &amp;#123;            var value = obj.value //得到修改后的值                , data = obj.data //得到所在行所有键值                , field = obj.field; //得到字段            var layEvent = obj.event;            if (layEvent === &#39;edit&#39;) &amp;#123;                layer.open(&amp;#123;                    type: 1,                    title: &#39;修改指标&#39;,                    area: [&#39;100%&#39;,&#39;100%&#39;],                    btn: [&#39;确认&#39;, &#39;取消&#39;],                    btnAlign: &#39;c&#39;,   // 按钮居中                    content: $(&#39;#edit&#39;).html(),                    yes: function (index, layero) &amp;#123;                        var id = $(&quot;#id&quot;).val();                        var kpiName = $(&quot;#kpiNameEdit&quot;).val();                        var kpiCode = $(&quot;#kpiCodeEdit&quot;).val();                        var devType = $(&quot;#devTypeEdit&quot;).val();                        var kpiUnits = $(&quot;#kpiUnitsEdit&quot;).val();                        var kpiLevel = $(&quot;#kpiLevelEdit&quot;).val();                        var kpiDesc = $(&quot;#kpiDescEdit&quot;).val();                        $.post(&#39;/modifykpi&#39;,                            &amp;#123;                                &quot;id&quot;:id,                                &quot;kpiName&quot;:kpiName,                                &quot;kpiCode&quot;:kpiCode,                                &quot;devType&quot;:devType,                                &quot;kpiUnits&quot;:kpiUnits,                                &quot;kpiLevel&quot;:kpiLevel,                                &quot;kpiDesc&quot;:kpiDesc                            &amp;#125;, function (data) &amp;#123;                                if (data.code === 200) &amp;#123;                                    layer.msg(&#39;更新成功&#39;, &amp;#123;icon: 1&amp;#125;);                                    // 同步更新表格数据                                    obj.update(&amp;#123;                                        kpiName:kpiName,                                        kpiCode:kpiCode,                                        devType:devType,                                        kpiUnits:kpiUnits,                                        kpiLevel:kpiLevel,                                        kpiDesc:kpiDesc                                    &amp;#125;)                                &amp;#125; else &amp;#123;                                    layer.msg(&#39;更新失败&#39;, &amp;#123;icon: 5&amp;#125;)                                &amp;#125;                            &amp;#125;);                        layer.close(index);//关闭弹出框                    &amp;#125;                &amp;#125;);                console.log(&#39;初始化表单之前&#39;+JSON.stringify(data));                //初始化修改表单 &quot;name&quot;:value                form.val(&quot;form-kpi-edit&quot;, &amp;#123;                    &quot;id&quot;: data.id                    , &quot;kpiNameEdit&quot;: data.kpiName                    , &quot;kpiCodeEdit&quot;: data.kpiCode                    , &quot;devTypeEdit&quot;: data.kpiDevType                    , &quot;kpiUnitsEdit&quot;: data.kpiUnits                    , &quot;kpiLevelEdit&quot;: data.kpiLevel                    , &quot;kpiDescEdit&quot;: data.kpiDesc                &amp;#125;);                form.render(null, &#39;form-kpi-edit&#39;)            &amp;#125;        &amp;#125;);</code></pre><h2 id="批量删除"><a href="#批量删除" class="headerlink" title="批量删除"></a>批量删除</h2><pre><code> var  active = &amp;#123;            batchdelindex: function () &amp;#123;                var checkStatus = table.checkStatus(&#39;lay-index-list&#39;)                    , checkData = checkStatus.data; //得到选中的数据                if (checkData.length === 0) &amp;#123;                    return layer.msg(&#39;请选择数据&#39;);                &amp;#125; else &amp;#123;                    var ids = [];                    $.each(checkData, function (i, v) &amp;#123;                        ids.push(v.id);                    &amp;#125;);                    console.log(ids);                    layer.confirm(&#39;确定删除吗？&#39;, function (index) &amp;#123;                        //执行 Ajax 后重载                        $.post(&#39;/batchdelkpi&#39;, &amp;#123;&quot;ids&quot;: JSON.stringify(ids)&amp;#125;, function (data) &amp;#123;                            if (data.code === 200) &amp;#123;                                layer.close(index);                                table.reload(&#39;lay-index-list&#39;);                                layer.msg(&#39;已删除&#39;, &amp;#123;icon: 1&amp;#125;);                            &amp;#125; else &amp;#123;                                layer.close(index);                                layer.msg(data.msg, &amp;#123;icon: 5&amp;#125;);                            &amp;#125;                        &amp;#125;);                    &amp;#125;,function(index) &amp;#123;                        layer.close(index);                    &amp;#125;);                &amp;#125;            &amp;#125;,            edit:function&amp;#123;.....&amp;#125;        &amp;#125;;</code></pre>]]></content>
      
      
      <categories>
          
          <category> Layui </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Layui </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring MVC项目搭建过程说明</title>
      <link href="/2018/09/06/spring-mvc-xiang-mu-da-jian-guo-cheng-shuo-ming/"/>
      <url>/2018/09/06/spring-mvc-xiang-mu-da-jian-guo-cheng-shuo-ming/</url>
      
        <content type="html"><![CDATA[<h2 id="基本的项目结构"><a href="#基本的项目结构" class="headerlink" title="基本的项目结构"></a>基本的项目结构</h2><p><img src="http://imgcq.test.upcdn.net/image20180906224906.png" alt="项目框架"></p><h2 id="pom-xml文件"><a href="#pom-xml文件" class="headerlink" title="pom.xml文件"></a>pom.xml文件</h2><pre class="line-numbers language-java"><code class="language-java"><span class="token operator">&lt;</span>properties<span class="token operator">></span>    <span class="token operator">&lt;</span>project<span class="token punctuation">.</span>build<span class="token punctuation">.</span>sourceEncoding<span class="token operator">></span>UTF<span class="token operator">-</span><span class="token number">8</span><span class="token operator">&lt;</span><span class="token operator">/</span>project<span class="token punctuation">.</span>build<span class="token punctuation">.</span>sourceEncoding<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> log4j日志包版本号 <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>slf4j<span class="token punctuation">.</span>version<span class="token operator">></span><span class="token number">1.7</span><span class="token punctuation">.</span><span class="token number">18</span><span class="token operator">&lt;</span><span class="token operator">/</span>slf4j<span class="token punctuation">.</span>version<span class="token operator">></span>    <span class="token operator">&lt;</span>log4j<span class="token punctuation">.</span>version<span class="token operator">></span><span class="token number">1.2</span><span class="token punctuation">.</span><span class="token number">17</span><span class="token operator">&lt;</span><span class="token operator">/</span>log4j<span class="token punctuation">.</span>version<span class="token operator">></span>    <span class="token operator">&lt;</span>spring<span class="token operator">-</span>version<span class="token operator">></span><span class="token number">4.3</span><span class="token punctuation">.</span><span class="token number">12</span><span class="token punctuation">.</span>RELEASE<span class="token operator">&lt;</span><span class="token operator">/</span>spring<span class="token operator">-</span>version<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>properties<span class="token operator">></span><span class="token operator">&lt;</span>dependencies<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>spring security<span class="token operator">--</span><span class="token operator">></span>      <span class="token operator">&lt;</span>dependency<span class="token operator">></span>          <span class="token operator">&lt;</span>groupId<span class="token operator">></span>org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>security<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>          <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>spring<span class="token operator">-</span>security<span class="token operator">-</span>web<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>          <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token number">4.2</span><span class="token punctuation">.</span><span class="token number">6</span><span class="token punctuation">.</span>RELEASE<span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>      <span class="token operator">&lt;</span>dependency<span class="token operator">></span>          <span class="token operator">&lt;</span>groupId<span class="token operator">></span>org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>security<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>          <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>spring<span class="token operator">-</span>security<span class="token operator">-</span>config<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>          <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token number">4.2</span><span class="token punctuation">.</span><span class="token number">6</span><span class="token punctuation">.</span>RELEASE<span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> test  set<span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>dependency<span class="token operator">></span>      <span class="token operator">&lt;</span>groupId<span class="token operator">></span>junit<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>      <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>junit<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>      <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token number">4.12</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>      <span class="token operator">&lt;</span>scope<span class="token operator">></span>test<span class="token operator">&lt;</span><span class="token operator">/</span>scope<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>    <span class="token operator">&lt;</span>dependency<span class="token operator">></span>      <span class="token operator">&lt;</span>groupId<span class="token operator">></span>org<span class="token punctuation">.</span>mockito<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>      <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>mockito<span class="token operator">-</span>all<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>      <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token number">1.10</span><span class="token punctuation">.</span><span class="token number">19</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>      <span class="token operator">&lt;</span>scope<span class="token operator">></span>test<span class="token operator">&lt;</span><span class="token operator">/</span>scope<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>    <span class="token operator">&lt;</span>dependency<span class="token operator">></span>      <span class="token operator">&lt;</span>groupId<span class="token operator">></span>org<span class="token punctuation">.</span>hamcrest<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>      <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>hamcrest<span class="token operator">-</span>all<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>      <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token number">1.3</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>      <span class="token operator">&lt;</span>scope<span class="token operator">></span>test<span class="token operator">&lt;</span><span class="token operator">/</span>scope<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>    <span class="token operator">&lt;</span>dependency<span class="token operator">></span>      <span class="token operator">&lt;</span>groupId<span class="token operator">></span>javax<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>      <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>javaee<span class="token operator">-</span>web<span class="token operator">-</span>api<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>      <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token number">7.0</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>      <span class="token operator">&lt;</span>scope<span class="token operator">></span>provided<span class="token operator">&lt;</span><span class="token operator">/</span>scope<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>spring<span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>dependency<span class="token operator">></span>      <span class="token operator">&lt;</span>groupId<span class="token operator">></span>org<span class="token punctuation">.</span>springframework<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>      <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>spring<span class="token operator">-</span>beans<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>      <span class="token operator">&lt;</span>version<span class="token operator">></span>$<span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>spring<span class="token operator">-</span>version<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>    <span class="token operator">&lt;</span>dependency<span class="token operator">></span>      <span class="token operator">&lt;</span>groupId<span class="token operator">></span>org<span class="token punctuation">.</span>springframework<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>      <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>spring<span class="token operator">-</span>core<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>      <span class="token operator">&lt;</span>version<span class="token operator">></span>$<span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>spring<span class="token operator">-</span>version<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>    <span class="token operator">&lt;</span>dependency<span class="token operator">></span>      <span class="token operator">&lt;</span>groupId<span class="token operator">></span>org<span class="token punctuation">.</span>springframework<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>      <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>spring<span class="token operator">-</span>context<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>      <span class="token operator">&lt;</span>version<span class="token operator">></span>$<span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>spring<span class="token operator">-</span>version<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>    <span class="token operator">&lt;</span>dependency<span class="token operator">></span>      <span class="token operator">&lt;</span>groupId<span class="token operator">></span>org<span class="token punctuation">.</span>springframework<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>      <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>spring<span class="token operator">-</span>context<span class="token operator">-</span>support<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>      <span class="token operator">&lt;</span>version<span class="token operator">></span>$<span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>spring<span class="token operator">-</span>version<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>    <span class="token operator">&lt;</span>dependency<span class="token operator">></span>      <span class="token operator">&lt;</span>groupId<span class="token operator">></span>org<span class="token punctuation">.</span>springframework<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>      <span class="token operator">&lt;</span>artifactId<span class="token operator">></span> spring<span class="token operator">-</span>jdbc<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>      <span class="token operator">&lt;</span>version<span class="token operator">></span>$<span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>spring<span class="token operator">-</span>version<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>    <span class="token operator">&lt;</span>dependency<span class="token operator">></span>      <span class="token operator">&lt;</span>groupId<span class="token operator">></span>org<span class="token punctuation">.</span>springframework<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>      <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>spring<span class="token operator">-</span>tx<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>      <span class="token operator">&lt;</span>version<span class="token operator">></span>$<span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>spring<span class="token operator">-</span>version<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>    <span class="token operator">&lt;</span>dependency<span class="token operator">></span>      <span class="token operator">&lt;</span>groupId<span class="token operator">></span>org<span class="token punctuation">.</span>springframework<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>      <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>spring<span class="token operator">-</span>web<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>      <span class="token operator">&lt;</span>version<span class="token operator">></span>$<span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>spring<span class="token operator">-</span>version<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>    <span class="token operator">&lt;</span>dependency<span class="token operator">></span>      <span class="token operator">&lt;</span>groupId<span class="token operator">></span>org<span class="token punctuation">.</span>springframework<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>      <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>spring<span class="token operator">-</span>webmvc<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>      <span class="token operator">&lt;</span>version<span class="token operator">></span>$<span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>spring<span class="token operator">-</span>version<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>    <span class="token operator">&lt;</span>dependency<span class="token operator">></span>      <span class="token operator">&lt;</span>groupId<span class="token operator">></span>org<span class="token punctuation">.</span>springframework<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>      <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>spring<span class="token operator">-</span>expression<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>      <span class="token operator">&lt;</span>version<span class="token operator">></span>$<span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>spring<span class="token operator">-</span>version<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>    <span class="token operator">&lt;</span>dependency<span class="token operator">></span>      <span class="token operator">&lt;</span>groupId<span class="token operator">></span>commons<span class="token operator">-</span>logging<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>      <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>commons<span class="token operator">-</span>logging<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>      <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token number">1.2</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>    <span class="token operator">&lt;</span>dependency<span class="token operator">></span>      <span class="token operator">&lt;</span>groupId<span class="token operator">></span>org<span class="token punctuation">.</span>springframework<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>      <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>spring<span class="token operator">-</span>test<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>      <span class="token operator">&lt;</span>version<span class="token operator">></span>$<span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>spring<span class="token operator">-</span>version<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>bean 验证<span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>dependency<span class="token operator">></span>      <span class="token operator">&lt;</span>groupId<span class="token operator">></span>javax<span class="token punctuation">.</span>validation<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>      <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>validation<span class="token operator">-</span>api<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>      <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token number">2.0</span><span class="token punctuation">.</span><span class="token number">1</span><span class="token punctuation">.</span>Final<span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>    <span class="token operator">&lt;</span>dependency<span class="token operator">></span>      <span class="token operator">&lt;</span>groupId<span class="token operator">></span>org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>validator<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>      <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>hibernate<span class="token operator">-</span>validator<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>      <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token number">6.0</span><span class="token punctuation">.</span><span class="token number">7</span><span class="token punctuation">.</span>Final<span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>    <span class="token operator">&lt;</span>dependency<span class="token operator">></span>      <span class="token operator">&lt;</span>groupId<span class="token operator">></span>org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>validator<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>      <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>hibernate<span class="token operator">-</span>validator<span class="token operator">-</span>annotation<span class="token operator">-</span>processor<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>      <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token number">6.0</span><span class="token punctuation">.</span><span class="token number">7</span><span class="token punctuation">.</span>Final<span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 添加日志相关jar包 <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>dependency<span class="token operator">></span>      <span class="token operator">&lt;</span>groupId<span class="token operator">></span>log4j<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>      <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>log4j<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>      <span class="token operator">&lt;</span>version<span class="token operator">></span>$<span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>log4j<span class="token punctuation">.</span>version<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>    <span class="token operator">&lt;</span>dependency<span class="token operator">></span>      <span class="token operator">&lt;</span>groupId<span class="token operator">></span>org<span class="token punctuation">.</span>slf4j<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>      <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>slf4j<span class="token operator">-</span>api<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>      <span class="token operator">&lt;</span>version<span class="token operator">></span>$<span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>slf4j<span class="token punctuation">.</span>version<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>    <span class="token operator">&lt;</span>dependency<span class="token operator">></span>      <span class="token operator">&lt;</span>groupId<span class="token operator">></span>org<span class="token punctuation">.</span>slf4j<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>      <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>slf4j<span class="token operator">-</span>log4j12<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>      <span class="token operator">&lt;</span>version<span class="token operator">></span>$<span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>slf4j<span class="token punctuation">.</span>version<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>mysql依赖<span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>dependency<span class="token operator">></span>      <span class="token operator">&lt;</span>groupId<span class="token operator">></span>mysql<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>      <span class="token operator">&lt;</span>artifactId<span class="token operator">></span> mysql<span class="token operator">-</span>connector<span class="token operator">-</span>java<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>      <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token number">5.1</span><span class="token punctuation">.</span><span class="token number">44</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span><span class="token operator">&lt;</span>dependency<span class="token operator">></span><span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span><span class="token operator">&lt;</span>groupId<span class="token operator">></span>com<span class="token punctuation">.</span>alibaba<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span><span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span><span class="token operator">&lt;</span>artifactId<span class="token operator">></span>druid<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span><span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span><span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token number">1.1</span><span class="token punctuation">.</span><span class="token number">6</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span><span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span><span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span><span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>mvnrepository<span class="token punctuation">.</span>com<span class="token operator">/</span>artifact<span class="token operator">/</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token operator">/</span>commons<span class="token operator">-</span>dbcp2 <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>dependency<span class="token operator">></span>      <span class="token operator">&lt;</span>groupId<span class="token operator">></span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>      <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>commons<span class="token operator">-</span>dbcp2<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>      <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token number">2.2</span><span class="token punctuation">.</span><span class="token number">0</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>    <span class="token operator">&lt;</span>dependency<span class="token operator">></span>      <span class="token operator">&lt;</span>groupId<span class="token operator">></span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>      <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>commons<span class="token operator">-</span>pool2<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>      <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token number">2.5</span><span class="token punctuation">.</span><span class="token number">0</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>文件上传<span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>dependency<span class="token operator">></span>      <span class="token operator">&lt;</span>groupId<span class="token operator">></span>commons<span class="token operator">-</span>fileupload<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>      <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>commons<span class="token operator">-</span>fileupload<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>      <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token number">1.3</span><span class="token punctuation">.</span><span class="token number">3</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>    <span class="token operator">&lt;</span>dependency<span class="token operator">></span>      <span class="token operator">&lt;</span>groupId<span class="token operator">></span>commons<span class="token operator">-</span>io<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>      <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>commons<span class="token operator">-</span>io<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>      <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token number">2.6</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>    <span class="token operator">&lt;</span>dependency<span class="token operator">></span>      <span class="token operator">&lt;</span>groupId<span class="token operator">></span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>      <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>commons<span class="token operator">-</span>lang3<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>      <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token number">3.7</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>shiro配置<span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>dependency<span class="token operator">></span>      <span class="token operator">&lt;</span>groupId<span class="token operator">></span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>shiro<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>      <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>shiro<span class="token operator">-</span>core<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>      <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token number">1.2</span><span class="token punctuation">.</span><span class="token number">2</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>    <span class="token operator">&lt;</span>dependency<span class="token operator">></span>      <span class="token operator">&lt;</span>groupId<span class="token operator">></span>javax<span class="token punctuation">.</span>servlet<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>      <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>javax<span class="token punctuation">.</span>servlet<span class="token operator">-</span>api<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>      <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token number">3.1</span><span class="token punctuation">.</span><span class="token number">0</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>      <span class="token operator">&lt;</span>scope<span class="token operator">></span>provided<span class="token operator">&lt;</span><span class="token operator">/</span>scope<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>    <span class="token operator">&lt;</span>dependency<span class="token operator">></span>      <span class="token operator">&lt;</span>groupId<span class="token operator">></span>javax<span class="token punctuation">.</span>servlet<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>      <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>jstl<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>      <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token number">1.2</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>mvnrepository<span class="token punctuation">.</span>com<span class="token operator">/</span>artifact<span class="token operator">/</span>com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>core<span class="token operator">/</span>jackson<span class="token operator">-</span>core <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>dependency<span class="token operator">></span>      <span class="token operator">&lt;</span>groupId<span class="token operator">></span>com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>core<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>      <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>jackson<span class="token operator">-</span>core<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>      <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token number">2.9</span><span class="token punctuation">.</span><span class="token number">4</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>    <span class="token operator">&lt;</span>dependency<span class="token operator">></span>      <span class="token operator">&lt;</span>groupId<span class="token operator">></span>com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>core<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>      <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>jackson<span class="token operator">-</span>databind<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>      <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token number">2.9</span><span class="token punctuation">.</span><span class="token number">4</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>    <span class="token operator">&lt;</span>dependency<span class="token operator">></span>      <span class="token operator">&lt;</span>groupId<span class="token operator">></span>com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>core<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>      <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>jackson<span class="token operator">-</span>annotations<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>      <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token number">2.9</span><span class="token punctuation">.</span><span class="token number">4</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>    <span class="token operator">&lt;</span>dependency<span class="token operator">></span>      <span class="token operator">&lt;</span>groupId<span class="token operator">></span>javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>jsp<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>      <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>jsp<span class="token operator">-</span>api<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>      <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token number">2.2</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>      <span class="token operator">&lt;</span>scope<span class="token operator">></span>provided<span class="token operator">&lt;</span><span class="token operator">/</span>scope<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>模版引擎<span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>dependency<span class="token operator">></span>      <span class="token operator">&lt;</span>groupId<span class="token operator">></span>org<span class="token punctuation">.</span>freemarker<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>      <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>freemarker<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>      <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token number">2.3</span><span class="token punctuation">.</span><span class="token number">28</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>markdown<span class="token operator">-</span>java parser<span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>dependency<span class="token operator">></span>      <span class="token operator">&lt;</span>groupId<span class="token operator">></span>com<span class="token punctuation">.</span>atlassian<span class="token punctuation">.</span>commonmark<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>      <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>commonmark<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>      <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token number">0.11</span><span class="token punctuation">.</span><span class="token number">0</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>    <span class="token operator">&lt;</span>dependency<span class="token operator">></span>      <span class="token operator">&lt;</span>groupId<span class="token operator">></span>com<span class="token punctuation">.</span>atlassian<span class="token punctuation">.</span>commonmark<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>      <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>commonmark<span class="token operator">-</span>ext<span class="token operator">-</span>gfm<span class="token operator">-</span>tables<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>      <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token number">0.11</span><span class="token punctuation">.</span><span class="token number">0</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>    <span class="token operator">&lt;</span>dependency<span class="token operator">></span>      <span class="token operator">&lt;</span>groupId<span class="token operator">></span>com<span class="token punctuation">.</span>atlassian<span class="token punctuation">.</span>commonmark<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>      <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>commonmark<span class="token operator">-</span>ext<span class="token operator">-</span>gfm<span class="token operator">-</span>strikethrough<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>      <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token number">0.11</span><span class="token punctuation">.</span><span class="token number">0</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>      <span class="token operator">&lt;</span>dependency<span class="token operator">></span>          <span class="token operator">&lt;</span>groupId<span class="token operator">></span>com<span class="token punctuation">.</span>vladsch<span class="token punctuation">.</span>flexmark<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>          <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>flexmark<span class="token operator">-</span>all<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>          <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token number">0.32</span><span class="token punctuation">.</span><span class="token number">18</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>      <span class="token operator">&lt;</span>dependency<span class="token operator">></span>          <span class="token operator">&lt;</span>groupId<span class="token operator">></span>org<span class="token punctuation">.</span>projectlombok<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>          <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>lombok<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>          <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token number">1.16</span><span class="token punctuation">.</span><span class="token number">20</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>          <span class="token operator">&lt;</span>scope<span class="token operator">></span>provided<span class="token operator">&lt;</span><span class="token operator">/</span>scope<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>dependencies<span class="token operator">></span>  <span class="token operator">&lt;</span>build<span class="token operator">></span>      <span class="token operator">&lt;</span>finalName<span class="token operator">></span>$<span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>artifactId<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>finalName<span class="token operator">></span>  <span class="token operator">&lt;</span>plugins<span class="token operator">></span>      <span class="token operator">&lt;</span>plugin<span class="token operator">></span>        <span class="token operator">&lt;</span>groupId<span class="token operator">></span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>maven<span class="token punctuation">.</span>plugins<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>        <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>maven<span class="token operator">-</span>compiler<span class="token operator">-</span>plugin<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>        <span class="token operator">&lt;</span>configuration<span class="token operator">></span>          <span class="token operator">&lt;</span>source<span class="token operator">></span><span class="token number">1.8</span><span class="token operator">&lt;</span><span class="token operator">/</span>source<span class="token operator">></span>          <span class="token operator">&lt;</span>target<span class="token operator">></span><span class="token number">1.8</span><span class="token operator">&lt;</span><span class="token operator">/</span>target<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>configuration<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>plugin<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>plugins<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>build<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Java配置-无XML配置"><a href="#Java配置-无XML配置" class="headerlink" title="Java配置(无XML配置)"></a>Java配置(无XML配置)</h2><p>RootConfig文件</p><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@ComponentScan</span><span class="token punctuation">(</span>basePackages <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token string">"com.xxx"</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>        excludeFilters <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token annotation punctuation">@ComponentScan</span><span class="token punctuation">.</span><span class="token function">Filter</span><span class="token punctuation">(</span>type <span class="token operator">=</span> FilterType<span class="token punctuation">.</span>ANNOTATION<span class="token punctuation">,</span>value <span class="token operator">=</span> EnableWebMvc<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token annotation punctuation">@ComponentScan</span><span class="token punctuation">.</span><span class="token function">Filter</span><span class="token punctuation">(</span>type <span class="token operator">=</span> FilterType<span class="token punctuation">.</span>ANNOTATION<span class="token punctuation">,</span>value <span class="token operator">=</span> Controller<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RootConfig</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>WebInitializer文件，代替web.xml文件</p><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WebInitializer</span> <span class="token keyword">extends</span>        <span class="token class-name">AbstractAnnotationConfigDispatcherServletInitializer</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">protected</span> Class<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">></span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">getRootConfigClasses</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>RootConfig<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token keyword">protected</span> Class<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">></span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">getServletConfigClasses</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>WebConfig<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token keyword">protected</span> String<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">getServletMappings</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token string">"/"</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//配置过滤器</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> Filter<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">getServletFilters</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        CharacterEncodingFilter characterEncodingFilter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CharacterEncodingFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        characterEncodingFilter<span class="token punctuation">.</span><span class="token function">setEncoding</span><span class="token punctuation">(</span><span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        characterEncodingFilter<span class="token punctuation">.</span><span class="token function">setForceEncoding</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Filter</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>characterEncodingFilter<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>WebConfig文件，相当于前端控制器，替代dispatcher-servlet.xml文件   </p><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token annotation punctuation">@EnableWebMvc</span><span class="token annotation punctuation">@ComponentScan</span><span class="token punctuation">(</span>basePackages <span class="token operator">=</span> <span class="token string">"com.xujn"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@PropertySource</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"classpath:freemarker.properties"</span><span class="token punctuation">,</span>encoding <span class="token operator">=</span> <span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WebConfig</span> <span class="token keyword">extends</span> <span class="token class-name">WebMvcConfigurerAdapter</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> Environment env<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//    视图解析器</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> ViewResolver <span class="token function">viewResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        InternalResourceViewResolver resolver <span class="token operator">=</span>                <span class="token keyword">new</span> <span class="token class-name">InternalResourceViewResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        resolver<span class="token punctuation">.</span><span class="token function">setViewClass</span><span class="token punctuation">(</span>JstlView<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        resolver<span class="token punctuation">.</span><span class="token function">setPrefix</span><span class="token punctuation">(</span><span class="token string">"/WEB-INF/views/"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        resolver<span class="token punctuation">.</span><span class="token function">setSuffix</span><span class="token punctuation">(</span><span class="token string">".jsp"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        resolver<span class="token punctuation">.</span><span class="token function">setOrder</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        resolver<span class="token punctuation">.</span><span class="token function">setExposeContextBeansAsAttributes</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> resolver<span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//    freemarker解析器</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> FreeMarkerViewResolver <span class="token function">FreeMarkerViewResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        FreeMarkerViewResolver resolver <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FreeMarkerViewResolver</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">,</span><span class="token string">".ftl"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        resolver<span class="token punctuation">.</span><span class="token function">setCache</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        resolver<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"text/html;charset=UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        resolver<span class="token punctuation">.</span><span class="token function">setOrder</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> resolver<span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//    配置资源映射</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addResourceHandlers</span><span class="token punctuation">(</span>ResourceHandlerRegistry registry<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//        SpringMVCBlog/src/main/resources</span>        registry<span class="token punctuation">.</span><span class="token function">addResourceHandler</span><span class="token punctuation">(</span><span class="token string">"/resources/**"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>                <span class="token function">addResourceLocations</span><span class="token punctuation">(</span><span class="token string">"classpath:/resources/"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setCachePeriod</span><span class="token punctuation">(</span><span class="token number">2592000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//    json解析</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> MappingJackson2HttpMessageConverter <span class="token function">mappingJackson2HttpMessageConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        MappingJackson2HttpMessageConverter converter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MappingJackson2HttpMessageConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>MediaType<span class="token operator">></span> supportedMediaTypes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        supportedMediaTypes<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>MediaType<span class="token punctuation">.</span>APPLICATION_JSON_UTF8<span class="token punctuation">)</span><span class="token punctuation">;</span>        supportedMediaTypes<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>MediaType<span class="token punctuation">.</span>TEXT_HTML<span class="token punctuation">)</span><span class="token punctuation">;</span>        converter<span class="token punctuation">.</span><span class="token function">setSupportedMediaTypes</span><span class="token punctuation">(</span>supportedMediaTypes<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//    converter.setObjectMapper(objectMapper());</span>        <span class="token keyword">return</span> converter<span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 主题资源配置</span>    <span class="token annotation punctuation">@Bean</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"themeSource"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> ThemeSource <span class="token function">resourceBundleThemeSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        ResourceBundleThemeSource source <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ResourceBundleThemeSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        source<span class="token punctuation">.</span><span class="token function">setDefaultEncoding</span><span class="token punctuation">(</span><span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        source<span class="token punctuation">.</span><span class="token function">setBasenamePrefix</span><span class="token punctuation">(</span><span class="token string">"themes."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> source<span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> CookieThemeResolver <span class="token function">themeResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        CookieThemeResolver resolver <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CookieThemeResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        resolver<span class="token punctuation">.</span><span class="token function">setDefaultThemeName</span><span class="token punctuation">(</span><span class="token string">"anime"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        resolver<span class="token punctuation">.</span><span class="token function">setCookieName</span><span class="token punctuation">(</span><span class="token string">"my-theme-cookie"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> resolver<span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> ThemeChangeInterceptor <span class="token function">themeChangeInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        ThemeChangeInterceptor interceptor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThemeChangeInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        interceptor<span class="token punctuation">.</span><span class="token function">setParamName</span><span class="token punctuation">(</span><span class="token string">"theme"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> interceptor<span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addInterceptors</span><span class="token punctuation">(</span>InterceptorRegistry registry<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        registry<span class="token punctuation">.</span><span class="token function">addInterceptor</span><span class="token punctuation">(</span><span class="token function">themeChangeInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Bean</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"multipartResolver"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> CommonsMultipartResolver <span class="token function">commonsMultipartResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        CommonsMultipartResolver resolver <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CommonsMultipartResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        resolver<span class="token punctuation">.</span><span class="token function">setMaxUploadSize</span><span class="token punctuation">(</span><span class="token number">5</span> <span class="token operator">*</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        resolver<span class="token punctuation">.</span><span class="token function">setDefaultEncoding</span><span class="token punctuation">(</span><span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> resolver<span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以下为基本配置</p><h2 id="数据源配置"><a href="#数据源配置" class="headerlink" title="数据源配置"></a>数据源配置</h2><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DataSourceConfig</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Bean</span><span class="token punctuation">(</span> name <span class="token operator">=</span> <span class="token string">"dataSource"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> DataSource <span class="token function">dataSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        BasicDataSource ds <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BasicDataSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ds<span class="token punctuation">.</span><span class="token function">setDriverClassName</span><span class="token punctuation">(</span><span class="token string">"com.mysql.jdbc.Driver"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ds<span class="token punctuation">.</span><span class="token function">setUrl</span><span class="token punctuation">(</span><span class="token string">"jdbc:mysql://localhost:3306/blog?"</span> <span class="token operator">+</span> <span class="token string">"useUnicode=true&amp;characterEncoding=UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ds<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ds<span class="token punctuation">.</span><span class="token function">setPassword</span><span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ds<span class="token punctuation">.</span><span class="token function">setInitialSize</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ds<span class="token punctuation">.</span><span class="token function">setMaxTotal</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> ds<span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//    配置jdbcTemplate</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> JdbcTemplate <span class="token function">jdbcTemplate</span><span class="token punctuation">(</span>DataSource dataSource<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"bean"</span><span class="token operator">+</span>dataSource<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">JdbcTemplate</span><span class="token punctuation">(</span>dataSource<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//    命名参数模版</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> NamedParameterJdbcTemplate <span class="token function">namedParameterJdbcTemplate</span><span class="token punctuation">(</span>DataSource dataSource<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">NamedParameterJdbcTemplate</span><span class="token punctuation">(</span>dataSource<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="log4j配置"><a href="#log4j配置" class="headerlink" title="log4j配置"></a>log4j配置</h2><pre><code>log4j.rootLogger=INFO,Console,File,ERROR,stdoutlog4j.appender.Console=org.apache.log4j.ConsoleAppenderlog4j.appender.Console.Target=System.outlog4j.appender.Console.layout=org.apache.log4j.PatternLayoutlog4j.appender.Console.layout.ConversionPattern=[%p][%t][%d&amp;#123;yyyy-MM-dd HH\:mm\:ss&amp;#125;][%C] - %m%nlog4j.logger.com.xujn.mapper=TRACElog4j.appender.File=org.apache.log4j.RollingFileAppenderlog4j.appender.File.File=logs/ssm.loglog4j.appender.File.MaxFileSize=10MBlog4j.appender.File.Threshold=ALLlog4j.appender.File.layout=org.apache.log4j.PatternLayoutlog4j.appender.File.layout.ConversionPattern=[%p][%t][%d&amp;#123;yyyy-MM-dd HH\:mm\:ss&amp;#125;][%C] - %m%n</code></pre><h2 id="控制器Controller"><a href="#控制器Controller" class="headerlink" title="控制器Controller"></a>控制器Controller</h2><p><img src="http://imgcq.test.upcdn.net/image20180906231507.png"></p><p>新建index.jsp文件在WEB-INF/views下，在控制器中指定index.jsp文件。</p><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Controller</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestController</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"index"</span><span class="token punctuation">,</span>method <span class="token operator">=</span> RequestMethod<span class="token punctuation">.</span>GET<span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token string">"index"</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行项目吧！</p>]]></content>
      
      
      <categories>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring MVC </tag>
            
            <tag> Spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redhat7.1静默安装Oracle 11g</title>
      <link href="/2018/09/02/redhat7-1-jing-mo-an-zhuang-oracle-11g/"/>
      <url>/2018/09/02/redhat7-1-jing-mo-an-zhuang-oracle-11g/</url>
      
        <content type="html"><![CDATA[<h2 id="安装前环境配置"><a href="#安装前环境配置" class="headerlink" title="安装前环境配置"></a>安装前环境配置</h2><p>以下配置在root用户下执行</p><h3 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h3><p>先将redhat自带yum源更换，然后安装下面依赖。</p><pre><code>yum -y install binutils \compat-libstdc++-33 \elfutils-libelf \elfutils-libelf-devel \expat \gcc \gcc-c++ \glibc \glibc-common \glibc-devel \glibc-headers \libaio \libaio-devel \libgcc \libstdc++ \libstdc++-devel \make \pdksh \sysstat \unixODBC \unixODBC-devel</code></pre><h3 id="检查是否安装成功"><a href="#检查是否安装成功" class="headerlink" title="检查是否安装成功"></a>检查是否安装成功</h3><pre><code>rpm -q \binutils \compat-libstdc++-33 \elfutils-libelf \elfutils-libelf-devel \expat \gcc \gcc-c++ \glibc \glibc-common \glibc-devel \glibc-headers \libaio \libaio-devel \libgcc \libstdc++ \libstdc++-devel \make \pdksh \sysstat \unixODBC \unixODBC-devel | grep &quot;not installed&quot;</code></pre><p>提示pdksh没有安装，正常使用<code>yum -y install pdksh</code>安装不了，需要下载</p><pre><code>wget -O pdksh-5.2.14-37.el5_8.1.x86_64.rpm http://vault.centos.org/5.11/os/x86_64/CentOS/pdksh-5.2.14-37.el5_8.1.x86_64.rpm</code></pre><p>下载完成，执行下面命令安装</p><pre><code>rpm -ivh pdksh-5.2.14-37.el5_8.1.x86_64.rpm</code></pre><p>检查依赖包是否安装完成。</p><h3 id="修改kernel参数"><a href="#修改kernel参数" class="headerlink" title="修改kernel参数"></a>修改kernel参数</h3><p><code>vim /etc/sysctl.conf</code>打开文件</p><p>文件底部添加下面内容</p><pre><code>net.ipv4.ip_local_port_range = 9000 65500fs.file-max = 6815744kernel.shmall = 10523004kernel.shmmax = 6465333657kernel.shmmni = 4096kernel.sem = 250 32000 100 128net.core.rmem_default=262144net.core.wmem_default=262144net.core.rmem_max=4194304net.core.wmem_max=1048576fs.aio-max-nr = 1048576</code></pre><p>执行<code>sysctl –p</code>使内核生效</p><h3 id="创建用户和相应的组"><a href="#创建用户和相应的组" class="headerlink" title="创建用户和相应的组"></a>创建用户和相应的组</h3><pre><code>groupadd –g 200 oinstallgroupadd –g 201 dbauseradd –u 440 –g oinstall –G dba –d /home/oracle oraclepasswd oracle</code></pre><p><code>id oracle</code>可以检查创建的用户,oracle为创建的用户。</p><h3 id="修改登录系统参数"><a href="#修改登录系统参数" class="headerlink" title="修改登录系统参数"></a>修改登录系统参数</h3><p><code>vim /etc/pam.d/login</code>打开文件</p><p>文件底部添加</p><pre><code>session required pam_limits.so</code></pre><h3 id="修改操作系统安全限制等参数"><a href="#修改操作系统安全限制等参数" class="headerlink" title="修改操作系统安全限制等参数"></a>修改操作系统安全限制等参数</h3><p><code>vim /etc/security/limits.conf</code>打开文件</p><p>底部添加</p><pre><code>oracle soft nproc 2047oracle hard nproc 16384oracle soft nofile 1024oracle hard nofile 65536</code></pre><h3 id="修改环境变量"><a href="#修改环境变量" class="headerlink" title="修改环境变量"></a>修改环境变量</h3><p><code>vim /etc/profile</code>打开文件</p><p>底部添加</p><pre><code>if [ $USER = &quot;oracle&quot; ]; thenif [ $SHELL = &quot;/bin/ksh&quot; ]; thenulimit -p 16384ulimit -n 65536elseulimit -u 16384 -n 65536fifi</code></pre><p>执行<code>source /etc/profile</code>使更改生效</p><h3 id="配置oracle安装目录"><a href="#配置oracle安装目录" class="headerlink" title="配置oracle安装目录"></a>配置oracle安装目录</h3><pre><code>root@localhost opt]# mkdir -p /opt/oracle/product/oraHome #安装目录[root@localhost opt]# mkdir -p /opt/oracle/oradata  [root@localhost opt]# mkdir -p /opt/inventory[root@localhost opt]# chown -R oracle:oinstall /opt/oracle[root@localhost opt]# chown -R 755  /opt/oracle</code></pre><h3 id="配置oracle用户环境变量"><a href="#配置oracle用户环境变量" class="headerlink" title="配置oracle用户环境变量"></a>配置oracle用户环境变量</h3><p>此部分需要切换到oracle用户执行，执行<code>su - oracle</code>切换用户。<code>su</code>为切换回root用户</p><p><code>vim ~/.bash_profile </code></p><p>在文件中添加</p><pre><code>export ORACLE_BASE=/opt/oracleexport ORACLE_HOME=$ORACLE_BASE/product/oraHomeexport ORACLE_SID=orclexport ORACLE_OWNER=oracleexport ORACLE_TERM=vt100export PATH=$PATH:$ORACLE_HOME/bin:$HOME/binexport PATH=$ORACLE_HOME/bin:$ORACLE_HOME/Apache/Apache/bin:$PATHLD_LIBRARY_PATH=$ORACLE_HOME/lib:/lib:/usr/lib:/usr/local/libexport LD_LIBRARY_PATHCLASSPATH=$ORACLE_HOME/JRE:$ORACLE_HOME/jlib:$ORACLE_HOME/rdbms/jlibCLASSPATH=$CLASSPATH:$ORACLE_HOME/network/jlibexport CLASSPATHexport LC_ALL=&quot;en_US&quot;export LANG=&quot;en_US&quot;</code></pre><p>配置生效<code>source ~/.bash_profile</code></p><hr><p>至此配置部分完成，开始安装oracle。</p><hr><h2 id="安装oracle"><a href="#安装oracle" class="headerlink" title="安装oracle"></a>安装oracle</h2><p>下面需要在root用户下执行</p><h3 id="下载安装包"><a href="#下载安装包" class="headerlink" title="下载安装包"></a>下载安装包</h3><p>下载<a href="http://www.oracle.com/technetwork/database/enterprise-edition/downloads/index.html">oracle 11g</a>，官网需要登录。</p><p><img src="http://imgcq.test.upcdn.net/image20180902222159.png"><br>下载两个文件后，上传到linux服务器上。</p><h3 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h3><pre><code>unzip linux.x64_11gR2_database_1of2.zip -d /optunzip linux.x64_11gR2_database_2of2.zip -d /opt</code></pre><p>我是将其解压在/opt下，解压之后文件会在database目录下。</p><h3 id="静默安装文件配置"><a href="#静默安装文件配置" class="headerlink" title="静默安装文件配置"></a>静默安装文件配置</h3><p>拷贝<code>database/response/</code>下面的<code>dbca.rsp</code>、<code>db_install.rsp</code>及<code>netca.rsp</code>三个文件至<code>/opt/oracle</code>目录下。这三个文件很重要</p><pre><code>cp response/* /opt/oracle</code></pre><p>编辑db_install.rsp文件 </p><p><code>vim /db/etc/db_install.rsp</code></p><p><code>hostname</code>查看自己的主机名</p><pre><code>racle.install.option=INSTALL_DB_SWONLYDECLINE_SECURITY_UPDATES=trueUNIX_GROUP_NAME=oinstallINVENTORY_LOCATION=/opt/inventorySELECTED_LANGUAGES=en,zh_CNORACLE_HOSTNAME=node75   #node75为自己的主机名ORACLE_HOME=/opt/oracle/product/oraHomeORACLE_BASE=/opt/oracleoracle.install.db.InstallEdition=EEoracle.install.db.isCustomInstall=trueoracle.install.db.DBA_GROUP=dbaoracle.install.db.OPER_GROUP= oinstallOracle.install.db.config.starterdb.type=GENERAL_PURPOSEOracle.install.db.config.starterdb.globalDBName=orclOracle.install.db.config.starterdb.SID=orclOracle.install.db.config.starterdb.characterSet= AL32UTF8Oracle.install.db.config.starterdb.password.ALL=oracleDECLINE_SECURITY_UPDATES=true</code></pre><h3 id="静默安装"><a href="#静默安装" class="headerlink" title="静默安装"></a>静默安装</h3><p>切换至oracle 帐号<code>su – oracle</code></p><p>进入database目录</p><pre><code>./runInstaller -silent -ignorePrereq -responseFile /opt/oracle/db_install.rsp</code></pre><p>安装开始，时间会有点久，如果出现问题，查看控制台日志。运维第一步，会看日志。</p><p>安装完成，提示Successfully Setup Software.</p><p><img src="http://imgcq.test.upcdn.net/image20180902223914.png"></p><h3 id="执行脚本"><a href="#执行脚本" class="headerlink" title="执行脚本"></a>执行脚本</h3><p>切换回root用户，执行上图中提示的脚本。</p><pre><code>sh /opt/oracle/inventory/orainsRot.shsh /opt/oracle/product/oraHome/root.sh</code></pre><h3 id="配置监听"><a href="#配置监听" class="headerlink" title="配置监听"></a>配置监听</h3><p><code>netca /silent /responsefile /opt/oracle/netca.rsp</code><br><img src="http://imgcq.test.upcdn.net/image20180902224154.png"></p><h3 id="执行静默建库"><a href="#执行静默建库" class="headerlink" title="执行静默建库"></a>执行静默建库</h3><pre><code>dbca -silent -responseFile /opt/oracle/dbca.rsp -sysPassword oracle -systemPassword oracle</code></pre><p><code>-sysPassword oracle -systemPassword oracle</code>需要制定密码，不然报错</p><p><img src="http://imgcq.test.upcdn.net/image20180902224347.png"></p><p>如上图，安装成功。</p><h2 id="查看oracle"><a href="#查看oracle" class="headerlink" title="查看oracle"></a>查看oracle</h2><p>切换oracle用户</p><h3 id="查看实例进程"><a href="#查看实例进程" class="headerlink" title="查看实例进程"></a>查看实例进程</h3><p><code>ps -ef | grep ora_ | grep -v grep</code></p><p><img src="http://imgcq.test.upcdn.net/image20180902224540.png"></p><h3 id="查看监听状态"><a href="#查看监听状态" class="headerlink" title="查看监听状态"></a>查看监听状态</h3><p><code>lsnrctl status</code></p><p><img src="http://imgcq.test.upcdn.net/image20180902224703.png"></p><h3 id="其他操作"><a href="#其他操作" class="headerlink" title="其他操作"></a>其他操作</h3><p>登录sqlplus，查看实例状态</p><p><code>sqlplus / as sysdba</code></p><p>查看数据库编码</p><p><code>select userenv(&#39;language&#39;) from dual;</code></p><p>查看数据库版本信息</p><p><code>select * from v$version;</code></p>]]></content>
      
      
      <categories>
          
          <category> Oracle </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Oracle 11g </tag>
            
            <tag> Redhat7 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux下解决TNS-12541 TNS  no listener问题</title>
      <link href="/2018/08/27/linux-xia-jie-jue-tns-12541-tns-no-listener-wen-ti/"/>
      <url>/2018/08/27/linux-xia-jie-jue-tns-12541-tns-no-listener-wen-ti/</url>
      
        <content type="html"><![CDATA[<h2 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h2><p>Navicat连接远程oracle数据库，数据库搭建在Redhat 7.1服务器上，莫名出现这个问题。</p><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><ul><li>检查监听状态</li><li>无监听，则查看监听文件</li></ul><p>查看监听状态<code>lsnrctl status</code></p><p>如果有监听，则如下图，显示有服务orcl(服务名)监听。</p><p><img src="http://imgcq.test.upcdn.net/image20180827102215.png"></p><p>如果没有监听，查看监听文件</p><p><code>cd /opt/oracle/product/oraHome/network/admin</code><br><img src="http://imgcq.test.upcdn.net/image20180827101607.png"></p><p>tnsnames.ora:用于客户端,提示客户端从哪个监听实例连接。</p><pre><code>ORCL =  (DESCRIPTION =    (ADDRESS = (PROTOCOL = TCP)(HOST = node75)(PORT = 1521))    (CONNECT_DATA =      (SERVER = DEDICATED)      (SERVICE_NAME = orcl)    )  )</code></pre><p>listener.ora：用于服务端，用于提示服务端监听哪些实例。</p><pre><code>LISTENER =  (DESCRIPTION_LIST =    (DESCRIPTION =      (ADDRESS = (PROTOCOL = IPC)(KEY = EXTPROC1521))      (ADDRESS = (PROTOCOL = TCP)(HOST =node75)(PORT = 1521))    )  )ADR_BASE_LISTENER = /opt/oracle</code></pre><p>其中HOST为当前主机名，之前将主机名更改，忘记（<del>其实就是不知道</del>）修改oracle监听的主机名。</p><h2 id="开启oracle"><a href="#开启oracle" class="headerlink" title="开启oracle"></a>开启oracle</h2><p>配置完成，开启oracle</p><pre><code>lsnrctl start  #开启监听dbstart    # 启动用户实例</code></pre>]]></content>
      
      
      <categories>
          
          <category> Oracle </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Oracle </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos7下Nginx安装配置</title>
      <link href="/2018/08/23/centos7-xia-nginx-an-zhuang-pei-zhi/"/>
      <url>/2018/08/23/centos7-xia-nginx-an-zhuang-pei-zhi/</url>
      
        <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><pre><code>yum install epel-releaseyum -y install nginxservice nginx startsystemctl enable nginx</code></pre><p>访问自己的地址<code>http://server_ip</code></p><p>记得开启80端口</p><p><img src="http://imgcq.test.upcdn.net/image20180823124919.png" alt="nginx默认界面"></p><p>firewalld支持动态更新和zone概念。firewalld有图形界面和命令行界面。</p><p>firewalld命令行管理工具是firewall-cmd，firewalld-cmd –help查看常用命令。</p><pre><code>    firewalld默认有8个zone，都配置好了，只要切换就可以了    drop 默认丢弃所有包    block 拒绝所有外部链接，允许内部发起的连接    public 指定外部连接可以进入    external    dmz 和硬件防火墙一样，受限制的公共连接可以进入    work 工作区，概念和workgroup一样，指定的外部链接允许    home 类似家庭组    internal 信任所有链接    centos7默认安装了firewalld，若没有安装，执行 yum install firewalld firewalld-config安装    systemctl start firewalld 启动    systemctl status firewalld或者firewall-cmd –state 查看状态    sytemctl disable firewalld 停止并禁用开机启动    systemctl enable firewalld 设置开机启动    systemctl stop firewalld 禁用    firewall-cmd –version 查看版本    firewall-cmd –help帮助信息    firewall-cmd –get-active-zones查看区域信息    firewall-cmd –get-zone-of-interface=eth0查看指定接口所属区域    firewall-cmd –panic-on 拒绝所有包    firewall-cmd –panic-off取消拒绝状态    firewall-cmd –query-panic查看是否拒绝    firewall-cmd –reload 更新防火墙规则    firewall-cmd –complete-reload 断开再连接    firewall-cmd –zone=public –add-interface=eth0 将接口添加到public区域 ， 默认接口都在public。若加上–permanet则永久生效    firewall-cmd –set-default-zone=public 设置public为默认接口区域    firewall-cmd –zone=pulic –list-ports 查看所有打开的端口    firewall-cmd –zone=pulic –add-port=80/tcp 把tcp 80端口加入到区域    firewall-cmd –zone=public –add-service=http 把http服务加入到区域    firewall-cmd –zone=public –remove-service=http 移除http服务</code></pre>]]></content>
      
      
      <categories>
          
          <category> 软件安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IntelliJ IDEA SSM框架整合</title>
      <link href="/2018/08/23/intellij-idea-ssm-kuang-jia-zheng-he/"/>
      <url>/2018/08/23/intellij-idea-ssm-kuang-jia-zheng-he/</url>
      
        <content type="html"><![CDATA[<h2 id="web-xml文件"><a href="#web-xml文件" class="headerlink" title="web.xml文件"></a>web.xml文件</h2><p><em>参考自：</em><a href="https://zhuanlan.zhihu.com/p/26150612">web.xml配置</a></p><p><code>web.xml</code>是网络程序中的一个很重要的配置文件。在启动一个WEB项目的时候，WEB容器（比如<code>tomcat</code>）会去读取它的配置文件web.xml，读取到不同的节点时，WEB容器就会创建相应的<code>过滤器</code>、<code>监听器</code>等为这个web项目服务。</p><p>IDEA初始化后，修改web.xml文件</p><pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;web-app xmlns=&quot;http://java.sun.com/xml/ns/javaee&quot;         xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;         xsi:schemaLocation=&quot;http://java.sun.com/xml/ns/javaee          http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd&quot;         version=&quot;3.0&quot;&gt;          &lt;display-name&gt;WebApplication&lt;/display-name&gt;    &lt;!--指定spring的配置文件--&gt;  &lt;context-param&gt;    &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;    &lt;param-value&gt;classpath:applicationContext.xml&lt;/param-value&gt;  &lt;/context-param&gt;  &lt;!--配置spring核心监听器--&gt;  &lt;listener&gt;    &lt;listener-class&gt;org.springframework.web.context.ContextLoaderListener&lt;/listener-class&gt;  &lt;/listener&gt;  &lt;!--spring MVC 的前端控制器--&gt;  &lt;servlet&gt;    &lt;servlet-name&gt;dispatcher&lt;/servlet-name&gt;    &lt;servlet-class&gt;org.springframework.web.servlet.DispatcherServlet&lt;/servlet-class&gt;    &lt;init-param&gt;      &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;      &lt;param-value&gt;classpath:dispatcher-servlet.xml&lt;/param-value&gt;    &lt;/init-param&gt;    &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;  &lt;/servlet&gt;  &lt;servlet-mapping&gt;    &lt;servlet-name&gt;dispatcher&lt;/servlet-name&gt;    &lt;url-pattern&gt;*.form&lt;/url-pattern&gt;  &lt;/servlet-mapping&gt;  &lt;!-- 编码过滤器--&gt;  &lt;filter&gt;    &lt;filter-name&gt;encodingFilter&lt;/filter-name&gt;    &lt;filter-class&gt;org.springframework.web.filter.CharacterEncodingFilter&lt;/filter-class&gt;    &lt;init-param&gt;      &lt;param-name&gt;encoding&lt;/param-name&gt;      &lt;param-value&gt;UTF-8&lt;/param-value&gt;    &lt;/init-param&gt;  &lt;/filter&gt;  &lt;filter-mapping&gt;    &lt;filter-name&gt;encodingFilter&lt;/filter-name&gt;    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;  &lt;/filter-mapping&gt;&lt;/web-app&gt;</code></pre><p><strong>说明：</strong></p><ul><li><p><code>listener</code>：监听器，能捕捉到服务器的启动和停止，在启动和停止触发里面的方法做相应的操作。必须在<code>web.xml</code>中配置才能使用，是配置监听类的。</p><pre class="line-numbers language-java"><code class="language-java"><span class="token operator">&lt;</span>listener<span class="token operator">></span> <span class="token operator">&lt;</span>listener<span class="token operator">-</span><span class="token keyword">class</span><span class="token operator">></span>org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>context<span class="token punctuation">.</span>ContextLoaderListener<span class="token operator">&lt;</span><span class="token operator">/</span>listener<span class="token operator">-</span><span class="token keyword">class</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>listener<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p><code>contenxt-param</code>：该节点用来声明应用范围(整个WEB项目)内的上下文初始化参数。param-name设定上下文的参数名称。必须是唯一名称，而param-value 是设定参数名称的值。</p><pre class="line-numbers language-java"><code class="language-java"><span class="token operator">&lt;</span>context<span class="token operator">-</span>param<span class="token operator">></span> <span class="token operator">&lt;</span>param<span class="token operator">-</span>name<span class="token operator">></span>contextConfigLocation<span class="token operator">&lt;</span><span class="token operator">/</span>param<span class="token operator">-</span>name<span class="token operator">></span> <span class="token operator">&lt;</span>param<span class="token operator">-</span>value<span class="token operator">></span>classpath<span class="token operator">:</span>applicationContext<span class="token punctuation">.</span>xml<span class="token operator">&lt;</span><span class="token operator">/</span>param<span class="token operator">-</span>value<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>context<span class="token operator">-</span>param<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>servlet</code>：这是个比较重要的节点。该servlet用于拦截请求（<code>url-pattern</code>为 / ，说明拦截所有请求。如果想拦截.do后缀文件的请求，就改为*.do），并交由SpringMVC的后台控制器来处理。这一项配置是必须的。<code>load-on-startup</code>节点用于标记容器是否在启动的时候就加载这个servlet。当值为0或者大于0时，表示容器在应用启动时就加载这个servlet；当是一个负数时或者没有指定时，则指示容器在该servlet被选择时才加载。正数的值越小，启动该servlet的优先级越高。</p><pre class="line-numbers language-java"><code class="language-java"><span class="token operator">&lt;</span>servlet<span class="token operator">></span> <span class="token operator">&lt;</span>servlet<span class="token operator">-</span>name<span class="token operator">></span>dispatcher<span class="token operator">&lt;</span><span class="token operator">/</span>servlet<span class="token operator">-</span>name<span class="token operator">></span> <span class="token operator">&lt;</span>servlet<span class="token operator">-</span><span class="token keyword">class</span><span class="token operator">></span>org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet<span class="token operator">&lt;</span><span class="token operator">/</span>servlet<span class="token operator">-</span><span class="token keyword">class</span><span class="token operator">></span> <span class="token operator">&lt;</span>init<span class="token operator">-</span>param<span class="token operator">></span>   <span class="token operator">&lt;</span>param<span class="token operator">-</span>name<span class="token operator">></span>contextConfigLocation<span class="token operator">&lt;</span><span class="token operator">/</span>param<span class="token operator">-</span>name<span class="token operator">></span>   <span class="token operator">&lt;</span>param<span class="token operator">-</span>value<span class="token operator">></span>classpath<span class="token operator">:</span>dispatcher<span class="token operator">-</span>servlet<span class="token punctuation">.</span>xml<span class="token operator">&lt;</span><span class="token operator">/</span>param<span class="token operator">-</span>value<span class="token operator">></span> <span class="token operator">&lt;</span><span class="token operator">/</span>init<span class="token operator">-</span>param<span class="token operator">></span> <span class="token operator">&lt;</span>load<span class="token operator">-</span>on<span class="token operator">-</span>startup<span class="token operator">></span><span class="token number">1</span><span class="token operator">&lt;</span><span class="token operator">/</span>load<span class="token operator">-</span>on<span class="token operator">-</span>startup<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>servlet<span class="token operator">></span><span class="token operator">&lt;</span>servlet<span class="token operator">-</span>mapping<span class="token operator">></span> <span class="token operator">&lt;</span>servlet<span class="token operator">-</span>name<span class="token operator">></span>dispatcher<span class="token operator">&lt;</span><span class="token operator">/</span>servlet<span class="token operator">-</span>name<span class="token operator">></span> <span class="token operator">&lt;</span>url<span class="token operator">-</span>pattern<span class="token operator">></span><span class="token operator">*</span><span class="token punctuation">.</span>form<span class="token operator">&lt;</span><span class="token operator">/</span>url<span class="token operator">-</span>pattern<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>servlet<span class="token operator">-</span>mapping<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>filter</code>：过滤器。为了能够处理中文的post请求，post上传的编码统统改为utf-8。</p></li></ul><blockquote><p>web.xml的加载过程是：context-param -&gt; listener -&gt; fileter -&gt; servlet。</p></blockquote><p><em>application.xml—&gt;listener—-&gt;fileter—-&gt;dispatcher-servlet.xml</em></p><h2 id="数据库连接池配置"><a href="#数据库连接池配置" class="headerlink" title="数据库连接池配置"></a>数据库连接池配置</h2><p><em>参考自：</em><a href="http://blog.csdn.net/fysuccess/article/details/66972554">java数据连接池</a></p><p>pom.xml</p><pre><code> &lt;!--mysql依赖--&gt;      &lt;dependency&gt;          &lt;groupId&gt;mysql&lt;/groupId&gt;          &lt;artifactId&gt; mysql-connector-java&lt;/artifactId&gt;          &lt;version&gt;5.1.44&lt;/version&gt;      &lt;/dependency&gt;      &lt;dependency&gt;          &lt;groupId&gt;com.alibaba&lt;/groupId&gt;          &lt;artifactId&gt;druid&lt;/artifactId&gt;          &lt;version&gt;1.1.6&lt;/version&gt;      &lt;/dependency&gt;</code></pre><p>db.properties</p><pre><code>jdbc.driver=com.mysql.jdbc.Driverjdbc.url=jdbc:mysql://localhost:3306/test?useUnicode=true&amp;characterEncoding=UTF-8jdbc.username=rootjdbc.password=XXX</code></pre><p>applicationContext.xml</p><pre><code>&lt;!--导入外部的properties文件--&gt;    &lt;context:property-placeholder location=&quot;classpath:db.properties&quot;/&gt;    &lt;!--Spring Druid 数据源配置--&gt;    &lt;bean id=&quot;dataSource&quot; class=&quot;com.alibaba.druid.pool.DruidDataSource&quot;           init-method=&quot;init&quot; destroy-method=&quot;close&quot;&gt;        &lt;!-- 基本属性 url、user、password --&gt;        &lt;property name=&quot;url&quot; value=&quot;$&amp;#123;jdbc.url&amp;#125;&quot; /&gt;        &lt;property name=&quot;username&quot; value=&quot;$&amp;#123;jdbc.username&amp;#125;&quot; /&gt;        &lt;property name=&quot;password&quot; value=&quot;$&amp;#123;jdbc.password&amp;#125;&quot; /&gt;        &lt;!-- 配置初始化大小、最小、最大 --&gt;        &lt;property name=&quot;initialSize&quot; value=&quot;1&quot; /&gt;        &lt;property name=&quot;minIdle&quot; value=&quot;1&quot; /&gt;        &lt;property name=&quot;maxActive&quot; value=&quot;20&quot; /&gt;        &lt;!-- 配置获取连接等待超时的时间 --&gt;        &lt;property name=&quot;maxWait&quot; value=&quot;60000&quot; /&gt;        &lt;!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 --&gt;        &lt;property name=&quot;timeBetweenEvictionRunsMillis&quot; value=&quot;60000&quot; /&gt;        &lt;!-- 配置一个连接在池中最小生存的时间，单位是毫秒 --&gt;        &lt;property name=&quot;minEvictableIdleTimeMillis&quot; value=&quot;300000&quot; /&gt;        &lt;!-- 打开PSCache，并且指定每个连接上PSCache的大小 --&gt;        &lt;property name=&quot;poolPreparedStatements&quot; value=&quot;true&quot; /&gt;        &lt;property name=&quot;maxPoolPreparedStatementPerConnectionSize&quot; value=&quot;20&quot; /&gt;        &lt;!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 --&gt;        &lt;property name=&quot;filters&quot; value=&quot;stat&quot; /&gt;    &lt;/bean&gt;</code></pre><p>web.xml</p><pre><code>&lt;!--数据库连接池监控配置--&gt;  &lt;filter&gt;    &lt;filter-name&gt;DruidWebStatFilter&lt;/filter-name&gt;    &lt;filter-class&gt;com.alibaba.druid.support.http.WebStatFilter&lt;/filter-class&gt;    &lt;init-param&gt;      &lt;param-name&gt;exclusions&lt;/param-name&gt;      &lt;param-value&gt;*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*&lt;/param-value&gt;    &lt;/init-param&gt;  &lt;/filter&gt;  &lt;filter-mapping&gt;    &lt;filter-name&gt;DruidWebStatFilter&lt;/filter-name&gt;    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;  &lt;/filter-mapping&gt;  &lt;servlet&gt;    &lt;servlet-name&gt;DruidStatView&lt;/servlet-name&gt;    &lt;servlet-class&gt;com.alibaba.druid.support.http.StatViewServlet&lt;/servlet-class&gt;  &lt;/servlet&gt;  &lt;servlet-mapping&gt;    &lt;servlet-name&gt;DruidStatView&lt;/servlet-name&gt;    &lt;url-pattern&gt;/druid/*&lt;/url-pattern&gt;  &lt;/servlet-mapping&gt;</code></pre><p>该配置可以访问监控界面，监控数据库访问性能，访问地址：<br><code>http://ip:port/项目名/druid/index.html</code> </p>]]></content>
      
      
      <categories>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IDEA </tag>
            
            <tag> SSM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux下MySQL 5.7.22安装和忘记密码</title>
      <link href="/2018/08/23/linux-xia-mysql-5.7.22-an-zhuang-he-wang-ji-mi-ma/"/>
      <url>/2018/08/23/linux-xia-mysql-5.7.22-an-zhuang-he-wang-ji-mi-ma/</url>
      
        <content type="html"><![CDATA[<h2 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h2><p>Redhat下安装MySQL5.7.22教程,安装完成后成功忘记密码-_-</p><h2 id="安装MySQL"><a href="#安装MySQL" class="headerlink" title="安装MySQL"></a>安装MySQL</h2><h4 id="1-压缩包处理"><a href="#1-压缩包处理" class="headerlink" title="1. 压缩包处理"></a>1. 压缩包处理</h4><p>解压压缩包</p><pre><code>tar -zxvf mysql-5.7.22-linux-glibc2.12-x86_64.tar.gz  </code></pre><p>重命名mysql解压文件</p><pre><code>mv mysql-5.7.22-linux-glibc2.12-x86_64 mysql</code></pre><p>复制mysql文件</p><pre><code>cp -r mysql /usr/local/mysql</code></pre><h4 id="2-添加系统mysql组合mysql用户"><a href="#2-添加系统mysql组合mysql用户" class="headerlink" title="2. 添加系统mysql组合mysql用户"></a>2. 添加系统mysql组合mysql用户</h4><p>添加系统mysql组</p><pre><code>groupadd mysql</code></pre><p>添加mysql用户</p><pre><code>useradd -r -g mysql mysql</code></pre><p>添加mysql目录所有者为mysql</p><pre><code>chown -R mysql:mysql /usr/local/mysql</code></pre><p>添加data目录所有者为mysql(<em>在mysql目录下新建data文件夹</em>)</p><pre><code>chown -R mysql:mysql data</code></pre><h4 id="3-安装数据库"><a href="#3-安装数据库" class="headerlink" title="3. 安装数据库"></a>3. 安装数据库</h4><p>在mysql目录下，初始化数据库</p><pre><code> bin/mysqld --initialize --user=mysql --basedir=/usr/local/mysql --datadir=/usr/local/mysql/data</code></pre><p>成功后,会生成临时密码,在最后一行。记住这个密码（我就记不住，所有才有忘记密码的部分）</p><p>执行以下命令创建RSA private key </p><pre><code>  bin/mysql_ssl_rsa_setup --datadir=/usr/local/mysql/data</code></pre><h4 id="4-配置my-cnf"><a href="#4-配置my-cnf" class="headerlink" title="4. 配置my.cnf"></a>4. 配置my.cnf</h4><p><code>vim /etc/my.cnf</code><br>(如果没有这个文件，直接新建)</p><pre><code>[mysqld]character_set_server=utf8init_connect=&#39;SET NAMES utf8&#39;basedir=/usr/local/mysqldatadir=/usr/local/mysql/datasocket=/tmp/mysql.sock#不区分大小写sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLESlower_case_table_names = 1log-error=/var/log/mysqld.logpid-file=/usr/local/mysql/data/mysqld.pid</code></pre><h4 id="5-添加开机启动"><a href="#5-添加开机启动" class="headerlink" title="5. 添加开机启动"></a>5. 添加开机启动</h4><p>复制mysql.server</p><pre><code>cp /usr/local/mysql/support-files/mysql.server  /etc/init.d/mysqld</code></pre><p>修改mysql.server</p><p><code>vim /etc/init.d/mysqld </code></p><p>添加basedir和datadir</p><pre><code> basedir=/usr/local/mysql datadir=/usr/local/mysql/data</code></pre><p>开机启动</p><pre><code> chkconfig --add mysqld</code></pre><h4 id="6-启动MySQL"><a href="#6-启动MySQL" class="headerlink" title="6.启动MySQL"></a>6.启动MySQL</h4><pre><code>service mysqld start  #启动service mysqld stop   #停止service mysqld status #查看状态</code></pre><h4 id="7-登陆修改密码"><a href="#7-登陆修改密码" class="headerlink" title="7. 登陆修改密码"></a>7. 登陆修改密码</h4><p>首次登陆,密码为之前的临时密码</p><p><code>mysql -uroot -p</code></p><pre><code>如果出现`-bash: mysql:command not found`问题添加软连接`  ln -s /usr/local/mysql/bin/mysql /usr/bin`</code></pre><p>输入密码后</p><pre><code>如果出现Your password has expired. To log in you must change it using a client that supports expired passwords这样的问题，那么跟我一样，重置密码</code></pre><p>正常访问，进入<code>mysql&gt;</code></p><p>修改之前的临时密码</p><pre><code>alter user &#39;root&#39;@&#39;localhost&#39; identified by &#39;your password&#39;;   </code></pre><p>刷新权限</p><pre><code>flush privileges;   </code></pre><p>授权新用户</p><pre><code>GRANT ALL PRIVILEGES ON *.* TO &#39;test&#39;@&#39;%&#39; IDENTIFIED BY &#39;test password&#39; WITH GRANT OPTION;   </code></pre><h2 id="忘记密码"><a href="#忘记密码" class="headerlink" title="忘记密码"></a>忘记密码</h2><p>关闭mysql</p><pre><code>service mysql stop# 或者kill MYSQL_PID</code></pre><p>进入安全模式(mysql的bin目录下<code>cd mysql/bin</code>)</p><pre><code>./mysqld_safe --skip-grant-tables &amp;</code></pre><p>root用户无密码登陆</p><pre><code>mysql -uroot</code></pre><p>进入之后，选择mysql数据库</p><pre><code>use mysql;</code></pre><p>更新密码 </p><pre><code>update user set authentication_string=password(&#39;your password&#39;) where user=&#39;root&#39;; </code></pre><p><em>authentication_string字段变化，以前为password字段</em><br>刷新权限表 </p><pre><code>flush privileges;</code></pre><p>退出</p><pre><code>quit;</code></pre><p>重启mysql，新密码登录（陆？）</p><p><a href="https://blog.csdn.net/zmx729618/article/details/78026497">mysql.user表权限</a></p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redhat更换yum源</title>
      <link href="/2018/08/14/redhat-geng-huan-yum-yuan/"/>
      <url>/2018/08/14/redhat-geng-huan-yum-yuan/</url>
      
        <content type="html"><![CDATA[<h2 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h2><p>redhat没有进行注册（收费了），不能够使用其自带的yum源，所以需要第三方的源来代替。</p><h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><p>查看自带yum源</p><pre><code>rpm -qa | grep yum# 查询结果yum-utils-1.1.31-24.el7.noarchyum-langpacks-0.4.2-3.el7.noarchyum-metadata-parser-1.1.4-10.el7.x86_64yum-rhn-plugin-2.0.1-4.el7.noarchPackageKit-yum-0.8.9-11.el7.x86_64yum-3.4.3-118.el7.noarch</code></pre><p><code>(这些安装包都需要从阿里源重新下载)</code></p><p>卸载RedHat自带yum源</p><pre><code>rpm -qa|grep yum|xargs rpm -e --nodeps</code></pre><p>配置redhat DNS解析（否则不能解析域名）</p><p><code>vim /etc/sysconfig/network-scripts/ifcfg-lo</code></p><pre><code>#ifcfg-lo文件添加DNS映射DNS1=8.8.8.8DNS2=8.8.8.4</code></pre><p>使用<code>wget</code>将需要的安装包从<a href="https://mirrors.aliyun.com/centos/7/os/x86_64/Packages/">阿里yum源</a><br>下载下来</p><pre><code>wget https://mirrors.aliyun.com/centos/7/os/x86_64/Packages/yum-3.4.3-158.el7.centos.noarch.rpm......</code></pre><p>安装</p><pre><code>rpm -ivh yum-3.4.3-158.el7.centos.noarch.rpm --nodes --force</code></pre><p><code>建议一个一个安装</code></p><p>新建配置文件(用于阿里源配置)<br><code>vim /etc/yum.repos.d/CentOS-Base.repo</code></p><pre><code>baseurl=https://mirrors.aliyun.com/centos/7/os/$basearch/gpgcheck=1gpgkey=https://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7#released updates[updates]name=CentOS-$7 - Updates - aliyun.com#mirrorlist=http://mirrorlist.centos.org/?release=$7&amp;arch=$basearch&amp;repo=updatesbaseurl=https://mirrors.aliyun.com/centos/7/updates/$basearch/gpgcheck=1gpgkey=https://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7#additional packages that may be useful[extras]name=CentOS-$7 - Extras - aliyun.com#mirrorlist=http://mirrorlist.centos.org/?release=$7&amp;arch=$basearch&amp;repo=extrasbaseurl=https://mirrors.aliyun.com/centos/7/extras/$basearch/gpgcheck=1gpgkey=https://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7#additional packages that extend functionality of existing packages[centosplus]name=CentOS-$7 - Plus - aliyun.combaseurl=https://mirrors.aliyun.com/centos/7/centosplus/$basearch/gpgcheck=1enabled=0gpgkey=https://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7</code></pre><p>下载软件测试下</p><pre><code>yum -y install tree</code></pre><h2 id="用过的命令"><a href="#用过的命令" class="headerlink" title="用过的命令"></a>用过的命令</h2><p><strong>RPM—&gt;Redhat package Manager软件管理工具</strong></p><p>常用命令：</p><ul><li>-ivh : 安装显示安装进度 –install–verbose–hash</li><li>-Uvh : 升级软件报 –Update</li><li>-e : 删除包</li><li>-qpl ：列出RPM软件包内的文件信息Query Package list</li><li>-qpi ：列出RPM软件包的描述信息Query Package install package(s)</li><li>-qf ：查找指定文件属于哪个RPM软件包Query File</li><li>-Va：校验所有的RPM软件包，查找丢失的文件View Lost</li></ul><p>参考自：<br><br><a href="https://blog.csdn.net/hongbin_xu/article/details/79316614">yum</a><br><a href="https://www.cnblogs.com/xiaochaohuashengmi/archive/2011/10/08/2203153.html">rpm</a></p>]]></content>
      
      
      <categories>
          
          <category> 软件安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IntelliJ IDEA license server搭建</title>
      <link href="/2017/12/30/intellij-idea-license-server-da-jian/"/>
      <url>/2017/12/30/intellij-idea-license-server-da-jian/</url>
      
        <content type="html"><![CDATA[<p><em>本文用于搭建JetBrains系列软件激活服务器，如有能力，请支持正版</em><br>##准备</p><ul><li>Centos 7</li><li>Nginx</li><li>适用于JetBrains系列</li></ul><p>##安装nginx</p><pre><code>    yum install epel-release    yum -y install nginx    service nginx start    systemctl enable nginx</code></pre><h2 id="nginx配置"><a href="#nginx配置" class="headerlink" title="nginx配置"></a>nginx配置</h2><pre><code>server &amp;#123;        listen       主机IP:端口port;         # 需要自己配置 例： 123.33.32.23:8888       # listen       [::]:8888 default_server ipv6only=on ;        server_name  localhost;        root         /usr/share/nginx/html;        # Load configuration files for the default server block.        include /etc/nginx/default.d/*.conf;        location / &amp;#123;        # 反向代理        proxy_pass http://idea.lanyus.com:80;           proxy_set_header X-Real-IP $remote_addr;                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;        &amp;#125;        error_page 404 /404.html;            location = /40x.html &amp;#123;        &amp;#125;        error_page 500 502 503 504 /50x.html;            location = /50x.html &amp;#123;        &amp;#125;    &amp;#125;</code></pre><h2 id="重启nginx，加载配置"><a href="#重启nginx，加载配置" class="headerlink" title="重启nginx，加载配置"></a>重启nginx，加载配置</h2><p>查看nginx主进程</p><pre><code>ps -aux |grep nginx</code></pre><p><img src="http://img.blog.csdn.net/20171230230816563?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaGFoYV8yMDE1MTA=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="nginx进程"><br>master 为主进程，使用kill -HUP 777平滑重启</p><pre><code>kill -HUP 777</code></pre><h2 id="配置防火墙"><a href="#配置防火墙" class="headerlink" title="配置防火墙"></a>配置防火墙</h2><p>centos7默认安装了firewalld，若没有安装，执行<code>yum install firewalld firewalld-config</code>安装</p><pre><code>systemctl start firewalld  # 启动</code></pre><p>打开监听端口（上文绑定端口<code>ip:port</code>）</p><pre><code>firewall-cmd --zone=public --add-port=8080/tcp --permanent // 永久开启8080端口</code></pre><p>重新加载防火墙</p><pre><code> firewall-cmd --reload</code></pre><p>现在可以使用你的<code>ip:port</code>激活</p>]]></content>
      
      
      <categories>
          
          <category> IDEA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IDEA </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
